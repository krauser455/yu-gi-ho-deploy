{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/adminpage/adminpage.component.html","webpack:///src/app/adminpage/adminpage.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/carddetail/carddetail.component.html","webpack:///src/app/carddetail/carddetail.component.ts","webpack:///src/app/cardlist/cardlist.component.html","webpack:///src/app/cardlist/cardlist.component.ts","webpack:///src/app/dati.service.ts","webpack:///src/app/deck-detail/deck-detail.component.html","webpack:///src/app/deck-detail/deck-detail.component.ts","webpack:///src/app/duelistutility/duelistutility.component.ts","webpack:///src/app/duelistutility/duelistutility.component.html","webpack:///src/app/envelopesfilter.pipe.ts","webpack:///src/app/errors.service.ts","webpack:///src/app/field-error/field-error.component.html","webpack:///src/app/field-error/field-error.component.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/leggendary-cards/leggendary-cards.component.ts","webpack:///src/app/leggendary-cards/leggendary-cards.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/loginpage/loginpage.component.html","webpack:///src/app/loginpage/loginpage.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/otherfilter.pipe.ts","webpack:///src/app/recipes-list/recipes-list.component.html","webpack:///src/app/recipes-list/recipes-list.component.ts","webpack:///src/app/recipes.service.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/rulespage/rulespage.component.ts","webpack:///src/app/rulespage/rulespage.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|fs","webpack:///ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|http","webpack:///ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|https","webpack:///ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|zlib"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","uploader","dati","UploadURL","AdminpageComponent","title","FileUploader","url","itemAlias","onAfterAddingFile","file","withCredentials","onCompleteItem","item","response","status","headers","console","log","form_carte","FormGroup","codice","FormControl","inputcod","Validators","nome","inputnome","attributo","inputattributo","livello","inputlivello","numero","inputnumero","descrizione","inputdescrizione","ATK","inputattacco","DEF","inputdifesa","tipo","inputtipo","extra","tipomostro","gemmeblu","inputblugem","gemmerosse","inputredgem","pendulumeffect","inputpendeffect","linkimmagine","inputimg","valueChanges","subscribe","value","effetto","gemelli","tuner","union","spirit","toon","pendulum","cyberse","normale","filename","substring","ListofEnvelopes","form_carte_buste","codcard","inputcodcard","codespansione","inputcodenvelope","form_buste","nomebusta","inputenvelopename","anno","inputenvelopeyear","tipocarta","setcardtype","routes","path","component","HomeComponent","CardlistComponent","RegisterComponent","LoginComponent","LoginpageComponent","canActivate","AuthGuard","CarddetailComponent","DeckDetailComponent","RecipesListComponent","RulespageComponent","DuelistutilityComponent","redirectTo","pathMatch","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","tokenGetter","localStorage","getItem","AppModule","provide","ErrorHandler","useClass","ErrorsService","AuthService","BrowserModule","appId","FormsModule","ReactiveFormsModule","HttpClientModule","FileUploadModule","PdfViewerModule","JwtModule","config","whitelistedDomains","blacklistedRoutes","NavbarComponent","EnvelopesFilterPipe","FooterComponent","OtherfilterPipe","FieldErrorComponent","LeggendaryCardsComponent","registerLocaleData","router","next","state","navigate","http","helper","JwtHelperService","users","datasend","environment","inputcognome","inputpass","inputemail","post","data","info","usersData","usersError","error","email","password","pass","pipe","map","result","setItem","token","decodeToken","userID","removeItem","privileges","Nome","Cognome","Email","route","snapshot","params","cardview","getCard","carte","pacchetti","auth","pack","Load_All_Cards","card","single_card","cod","setPack","DatiService","authservice","dati_carte","carta_selezionata","quantity","length","typedeck","get","index","userid_fk","cod_fk","qnt","type","url2","url3","put","dati_carte_utente","splice","push","alert","buste_espansione","envelope","recipesdata","Getrecipe","Getrecipescomments","Getrecipescommentsids","Number","form_comment","commentbody","ind","DeleteComment","desc","Addcomment","Addcom","cardlist","packname","filter","y","espansioni","fieldName","undefined","login","username","first","err","submit","utente","datarecipe","val","name","UserLoggedName","surname","UserLoggedCognome","UserLoggedEmail","CardsLoggedUser","deleteCardfromdeck","logout","args","Getallallrecipes","Getrecipesidofuser","recipe","single_recipe","idric","DeleteRecipe","RecipesService","recipesid","trim","singleric","allric","i","comment","user_comment","cognome","id_com","common_id_comment","all_comment_ids","all_comment","iduser","idrecipe","idcomment","form","firstname","lastname","pdfSrc","pagenumber","Decrementpage","Incrementpage","production","enableProdMode","platformBrowser","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","<div class=\"group\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\"> <font color=\"blue\">Pagina di amministrazione</font></h1>\n  </div>\n  <div class=\"form-row\">\n    <h2 id=\"formchoice\">Quale carta vuoi aggiungere?</h2>\n    <div id=\"formchoice\" class=\"form-group col-md-3\">\n      <select type=\"text\" class=\"form-control\" (click)=\"setcardtype($event.target.value)\">\n        <option selected>Seleziona un tipo</option>\n        <option value=\"MOSTRO\">MOSTRO</option>\n        <option value=\"MAGIA\">MAGIA</option>\n        <option value=\"TRAPPOLA\">TRAPPOLA</option>\n      </select>\n  </div>\n</div>\n\n<form *ngIf=\"tipocarta == 'MOSTRO' || tipocarta == 'MAGIA' || tipocarta == 'TRAPPOLA'\" [formGroup]=\"form_carte\" novalidate>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Codice</font></b>\n      <input formControlName=\"codice\" type=\"text\" class=\"form-control\" placeholder=\"codice\">\n      <app-field-error [field]=\"form_carte.controls.codice\" fieldName=\"codice\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Nome</font></b>\n      <input formControlName=\"nome\" type=\"text\" class=\"form-control\" placeholder=\"nome\">\n      <app-field-error [field]=\"form_carte.controls.nome\" fieldName=\"nome\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Attributo</font></b>\n      <select formControlName=\"attributo\" type=\"text\" class=\"form-control\" placeholder=\"attributo\">\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"DARK\">DARK</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"DIVINE\">DIVINE</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"EARTH\">EARTH</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"FIRE\">FIRE</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"LIGHT\">LIGHT</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"WATER\">WATER</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"WIND\">WIND</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"SPELL\" selected>SPELL</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"TRAP\" selected>TRAP</option>\n      </select>\n      <app-field-error [field]=\"form_carte.controls.attributo\" fieldName=\"attributo\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Livello</font></b>\n      <select formControlName=\"livello\" type=\"number\" class=\"form-control\" placeholder=\"livello\">\n        <option type=\"number\" value=\"1\" >1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n        <option value=\"11\">11</option>\n        <option value=\"12\">12</option>\n      </select>\n      <app-field-error [field]=\"form_carte.controls.livello\" fieldName=\"livello\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Numero</font></b>\n      <input formControlName=\"numero\" type=\"text\" class=\"form-control\" placeholder=\"numero\">\n      <app-field-error [field]=\"form_carte.controls.numero\" fieldName=\"numero\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Descrizione</font></b>\n      <input formControlName=\"descrizione\" type=\"text\" class=\"form-control\" placeholder=\"descrizione\">\n      <app-field-error [field]=\"form_carte.controls.descrizione\" fieldName=\"descrizione\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">ATK</font></b>\n      <input formControlName=\"ATK\" type=\"number\" class=\"form-control\" placeholder=\"ATK\">\n      <app-field-error [field]=\"form_carte.controls.ATK\" fieldName=\"ATK\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">DEF</font></b>\n      <input formControlName=\"DEF\" type=\"number\" class=\"form-control\" placeholder=\"DEF\">\n      <app-field-error [field]=\"form_carte.controls.DEF\" fieldName=\"DEF\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Tipo</font></b>\n      <select formControlName=\"tipo\" type=\"text\" class=\"form-control\" placeholder=\"tipo\" (click)=\"this.dati.inputtipo = $event.target.value\">\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Acqua/\" >Acqua</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Bestia/\">Bestia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Guerriero-Bestia/\">Guerriero-Bestia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Fata/\">Fata</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Macchina/\">Macchina</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Incantatore/\">Incantatore</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Serpente-Marino/\">Serpente-Marino</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Tuono/\">Tuono</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Insetto/\">Insetto</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Psichico/\">Psichico</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Zombie/\">Zombie</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Dinosauro/\">Dinosauro</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Bestia Alata/\">Bestia Alata</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Divinità-Bestia/\">Divinità-Bestia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Pianta/\">Pianta</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Roccia/\">Roccia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Guerriero/\">Guerriero</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Pesce/\">Pesce</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Rettile/\">Rettile</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Pyro/\">Pyro</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Drago/\">Drago</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Demone/\">Demone</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Cyberverso/\">Cyberverso</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"Trappola_Normale\">Trappola Normale</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"Trappola_Continua\">Trappola Continua</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"Contro_Trappola\">Contro Trappola</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Normale\">Magia Normale</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Continua\">Magia Continua</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Rapida\">Magia Rapida</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Terreno\">Magia Terreno</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Rituale\">Magia Rituale</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Equipaggiamento\">Magia Equipaggiamento</option>\n      </select>\n      <app-field-error [field]=\"form_carte.controls.tipo\" fieldName=\"tipo\"></app-field-error>\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n        <b><font color=\"white\">Tipo carta Mostro:</font></b> <br>\n        <b><font color=\"red\">Link</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Link/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Xyz</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Xyz/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Fusione</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Fusione/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Synchro</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Synchro/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Rituale</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Ritual/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Tipo effetto mostro:</font></b><br>\n      <b><font color=\"red\">Effetto</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox1 (change)=\"effetto = checkbox1.checked;\">\n      <b><font color=\"red\">Normale</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox9 (change)=\"normale = checkbox9.checked;\">\n      <b><font color=\"red\">Gemelli</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox2 (change)=\"gemelli = checkbox2.checked;\">\n      <b><font color=\"red\">Tuner</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox3 (change)=\"tuner = checkbox3.checked;\">\n      <b><font color=\"red\">Union</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox4 (change)=\"union = checkbox4.checked;\">\n      <b><font color=\"red\">Spirit</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox5 (change)=\"spirit = checkbox5.checked;\">\n      <b><font color=\"red\">Toon</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox6 (change)=\"toon = checkbox6.checked;\">\n      <b><font color=\"red\">Pendulum</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox7 (change)=\"pendulum = checkbox7.checked;\">\n      <b><font color=\"red\">Cyberse</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox8 (change)=\"cyberse = checkbox8.checked;\">\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Gemme blu (pendulum cards)</font></b>\n      <input formControlName=\"gemmeblu\" type=\"number\" class=\"form-control\" placeholder=\"Gemme blu\">\n      <app-field-error [field]=\"form_carte.controls.gemmeblu\" fieldName=\"gemmeblu\"></app-field-error>\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Gemme rosse (pendulum cards)</font></b>\n      <input formControlName=\"gemmerosse\" type=\"number\" class=\"form-control\" placeholder=\"Gemme rosse\">\n      <app-field-error [field]=\"form_carte.controls.gemmerosse\" fieldName=\"gemmerosse\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Effetto pendulum (pendulum cards)</font></b>\n      <input formControlName=\"pendulumeffect\" type=\"text\" class=\"form-control\" placeholder=\"Effetto pendulum\">\n      <app-field-error [field]=\"form_carte.controls.pendulumeffect\" fieldName=\"pendulumeffect\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Immagine carta</font></b>\n      <input formControlName=\"linkimmagine\" class=\"form-control\" type=\"file\" name=\"photo\" ng2FileSelect [uploader]=\"uploader\" />\n      <app-field-error [field]=\"form_carte.controls.linkimmagine\" fieldName=\"linkimmagine\"></app-field-error>\n    </div>\n  </div>\n  <div class=\"form-group col-md-3\">\n    <button type=\"button\" class=\"btn btn-success btn-s\"\n      (click)=\"uploader.uploadAll(); dati.AddCardToList(); reset()\" *ngIf=\"form_carte.valid\">\n      Upload data\n    </button>\n  </div>\n</form>\n\n<div id=\"cardintoenvelope\" class=\"form-row\">\n<form [formGroup]=\"form_carte_buste\" novalidate>\n  <h2>Aggiunta carta in busta</h2>\n  <div class=\"form-group col-md\">\n    <b>Codice carta</b>\n    <input formControlName=\"codcard\" type=\"text\" class=\"form-control\" [(ngModel)]=\"this.form_carte.value.codice\">\n  </div>\n  <div class=\"form-group col-md\">\n    <b>Espansione</b>\n    <select formControlName=\"codespansione\" type=\"number\" class=\"form-control\" placeholder=\"cod_espansione\">\n      <option *ngFor=\"let envelopes of dati.buste_espansione.envelopes\" value=\"{{ envelopes.envid }}\">{{ envelopes.nome }}</option>\n    </select>\n  </div>\n  <div class=\"form-group col-md\">\n    <button (click)=\"dati.AddCardToEnvelope()\"  type=\"submit\" class=\"btn btn-primary\" *ngIf=\"form_carte_buste.valid\">Aggiungi</button>\n  </div>\n</form>\n\n<form [formGroup]=\"form_buste\">\n  <h2>Aggiunta di una nuova busta</h2>\n  <div class=\"form-group col-md\">\n    <b>Nome busta</b>\n    <input formControlName=\"nomebusta\" type=\"text\" class=\"form-control\" placeholder=\"nome\">\n  </div>\n  <div class=\"form-group col-md\">\n    <b>Anno di uscita</b>\n    <input formControlName=\"anno\" type=\"number\" class=\"form-control\" placeholder=\"anno\">\n  </div>\n  <div class=\"form-group col-md\">\n    <button (click)=dati.AddEnvelope() type=\"submit\" class=\"btn btn-primary\">Aggiungi busta</button>\n  </div>\n</form>\n</div>\n</div>\n</div>\n<!--<input type=\"file\" name=\"photo\" ng2FileSelect [uploader]=\"uploader\" />\n<button type=\"button\" class=\"btn btn-success btn-s\"\n  (click)=\"uploader.uploadAll()\"\n  [disabled]=\"!uploader.getNotUploadedItems().length\" >\n      Upload an Image\n</button>-->\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { DatiService } from '../dati.service';\nconst UploadURL = 'http://localhost:8000/api/upload';\n@Component({\n  selector: 'app-adminpage',\n  templateUrl: './adminpage.component.html',\n  styleUrls: ['./adminpage.component.css']\n})\nexport class AdminpageComponent implements OnInit {\n  title = 'Upload a File';\n  form_carte: FormGroup;\n  form_carte_buste: FormGroup;\n  form_buste: FormGroup;\n  filename: string;\n\n  tipocarta: string;\n\n  tipomostro: string;\n\n  effetto: boolean;\n  gemelli: boolean;\n  tuner: boolean;\n  union: boolean;\n  spirit: boolean;\n  toon: boolean;\n  pendulum: boolean;\n  cyberse: boolean;\n  normale: boolean;\n\n  private uploader: FileUploader = new FileUploader({url: UploadURL, itemAlias: 'photo'});\n\n  constructor(public dati: DatiService) { }\n\n  ngOnInit() {\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n         console.log('FileUpload:uploaded:', item, status, response);\n     };\n     // form aggiunta carta\n     this.form_carte = new FormGroup({\n       codice: new FormControl(this.dati.inputcod, Validators.required),\n       nome: new FormControl(this.dati.inputnome, Validators.required),\n       attributo: new FormControl(this.dati.inputattributo, Validators.required),\n       livello: new FormControl(this.dati.inputlivello),\n       numero: new FormControl(this.dati.inputnumero, Validators.required),\n       descrizione: new FormControl(this.dati.inputdescrizione, Validators.required),\n       ATK: new FormControl(this.dati.inputattacco),\n       DEF: new FormControl(this.dati.inputdifesa),\n       tipo: new FormControl(this.dati.inputtipo, Validators.required),\n       extra: new FormControl(this.tipomostro),\n       gemmeblu: new FormControl(this.dati.inputblugem),\n       gemmerosse: new FormControl(this.dati.inputredgem),\n       pendulumeffect: new FormControl(this.dati.inputpendeffect),\n       linkimmagine: new FormControl(this.dati.inputimg, Validators.required),\n     })\n     this.form_carte.valueChanges.subscribe(() => {\n       this.dati.inputcod= this.form_carte.value.codice;\n       this.dati.inputnome = this.form_carte.value.nome;\n       this.dati.inputattributo = this.form_carte.value.attributo;\n       this.dati.inputlivello = this.form_carte.value.livello;\n       this.dati.inputnumero = this.form_carte.value.numero;\n       this.dati.inputdescrizione = this.form_carte.value.descrizione;\n       this.dati.inputattacco = this.form_carte.value.ATK;\n       this.dati.inputdifesa = this.form_carte.value.DEF;\n\n       if(!(this.form_carte.value.extra)){\n         this.form_carte.value.extra = \"\";\n       }\n\n       this.dati.inputtipo = this.form_carte.value.tipo + this.form_carte.value.extra;\n\n       if(this.effetto){\n         this.dati.inputtipo += \"Effetto/\"\n       }\n       if(this.gemelli){\n         this.dati.inputtipo += \"Gemelli/\"\n       }\n       if(this.tuner){\n         this.dati.inputtipo += \"Tuner/\"\n       }\n       if(this.union){\n         this.dati.inputtipo += \"Union/\"\n       }\n       if(this.spirit){\n         this.dati.inputtipo += \"Spirit/\"\n       }\n       if(this.toon){\n         this.dati.inputtipo += \"Toon/\"\n       }\n       if(this.pendulum){\n         this.dati.inputtipo += \"Pendulum/\"\n       }\n       if(this.cyberse){\n         this.dati.inputtipo += \"Cyberse/\"\n       }\n       if(this.normale){\n         this.dati.inputtipo += \"Normale/\"\n       }\n\n       this.dati.inputblugem = this.form_carte.value.gemmeblu;\n       this.dati.inputredgem = this.form_carte.value.gemmerosse;\n       this.dati.inputpendeffect = this.form_carte.value.pendulumeffect;\n\n       if(this.form_carte.value.linkimmagine != null){\n         this.filename = \"http://localhost:8000/\" + this.form_carte.value.linkimmagine.substring(12);\n         this.dati.inputimg = this.filename;\n       }\n\n     });\n     // form aggiunta carte in busta\n     this.dati.ListofEnvelopes();\n     this.form_carte_buste = new FormGroup({\n       codcard: new FormControl(this.dati.inputcodcard, Validators.required),\n       codespansione: new FormControl(this.dati.inputcodenvelope, Validators.required),\n     })\n     this.form_carte_buste.valueChanges.subscribe(() => {\n       this.dati.inputcodcard = this.form_carte_buste.value.codcard;\n       this.dati.inputcodenvelope = this.form_carte_buste.value.codespansione;\n     })\n\n     // form aggiunta nuova cod_espansione\n     this.form_buste = new FormGroup({\n       nomebusta: new FormControl(this.dati.inputenvelopename, Validators.required),\n       anno: new FormControl(this.dati.inputenvelopeyear, Validators.required)\n     })\n     this.form_buste.valueChanges.subscribe(() => {\n       this.dati.inputenvelopename = this.form_buste.value.nomebusta;\n       this.dati.inputenvelopeyear = this.form_buste.value.anno;\n     })\n  }\n\n  reset(){\n    this.filename = null;\n    this.dati.inputimg = null;\n    this.dati.inputtipo = null;\n    this.dati.inputnome = null;\n    this.dati.inputattributo = null;\n    this.dati.inputlivello = null;\n    this.dati.inputnumero = null;\n    this.dati.inputdescrizione = null;\n    this.dati.inputattacco = null;\n    this.dati.inputdifesa = null;\n    this.tipomostro = null;\n    this.dati.inputblugem = null;\n    this.dati.inputredgem = null;\n    this.dati.inputpendeffect = null;\n  }\n\n  setcardtype(e: string){\n    this.tipocarta = e;\n    console.log(e);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {HomeComponent} from './home/home.component';\nimport {CardlistComponent} from './cardlist/cardlist.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {LoginpageComponent} from './loginpage/loginpage.component';\nimport {CarddetailComponent} from './carddetail/carddetail.component';\nimport {AdminpageComponent} from './adminpage/adminpage.component';\n\nimport {RecipesListComponent} from './recipes-list/recipes-list.component';\nimport {DuelistutilityComponent} from './duelistutility/duelistutility.component';\nimport {DeckDetailComponent} from './deck-detail/deck-detail.component';\nimport {RulespageComponent} from './rulespage/rulespage.component';\n\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'cardlist', component: CardlistComponent, },\n  { path: 'register', component: RegisterComponent, },\n  { path: 'login', component: LoginComponent },\n  { path: 'loginpage', component: LoginpageComponent, canActivate: [AuthGuard] },\n  { path: 'cards/:id', component: CarddetailComponent, },\n  { path: 'recipess/:id', component: DeckDetailComponent, },\n  { path: 'adminpage', component: AdminpageComponent, canActivate: [AuthGuard] },\n  { path: 'recipes', component: RecipesListComponent, },\n  { path: 'rulespage', component: RulespageComponent, },\n  { path: 'utility', component: DuelistutilityComponent,},\n  { path: '**', redirectTo: '/home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Yu-gi-ho-app';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { CardlistComponent } from './cardlist/cardlist.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoginpageComponent } from './loginpage/loginpage.component';\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { registerLocaleData } from '@angular/common';\nimport localeIt from '@angular/common/locales/it';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ErrorsService } from './errors.service';\n\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthGuard } from './auth.guard';\n\nimport { AuthService } from './auth.service';\nimport { AdminpageComponent } from './adminpage/adminpage.component';\nimport { EnvelopesFilterPipe } from './envelopesfilter.pipe';\nimport { CarddetailComponent } from './carddetail/carddetail.component';\nimport { RulespageComponent } from './rulespage/rulespage.component';\nimport { DuelistutilityComponent } from './duelistutility/duelistutility.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { OtherfilterPipe } from './otherfilter.pipe';\nimport { FieldErrorComponent } from './field-error/field-error.component';\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { RecipesListComponent } from './recipes-list/recipes-list.component';\nimport { DeckDetailComponent } from './deck-detail/deck-detail.component';\nimport { LeggendaryCardsComponent } from './leggendary-cards/leggendary-cards.component';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\n// ...\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CardlistComponent,\n    RegisterComponent,\n    LoginComponent,\n    LoginpageComponent,\n    AdminpageComponent,\n    EnvelopesFilterPipe,\n    CarddetailComponent,\n    RulespageComponent,\n    DuelistutilityComponent,\n    FooterComponent,\n    OtherfilterPipe,\n    FieldErrorComponent,\n    RecipesListComponent,\n    DeckDetailComponent,\n    LeggendaryCardsComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FileUploadModule,\n    PdfViewerModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:8000'],\n        blacklistedRoutes: ['localhost:8000/login']\n      }\n    })\n  ],\n  providers: [{provide: ErrorHandler, useClass: ErrorsService},\n    AuthService,\n    AuthGuard], //provvede alla gestione degli errori\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nregisterLocaleData(localeIt, 'it')\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('access_token')) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Users } from './users';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  // input per la registrazione\n  helper = new JwtHelperService();\n\n  users: Users = null;\n\n  inputnome: string;\n  inputcognome: string;\n  inputpass: string;\n  inputemail: string;\n\n  usersData: any;\n  usersError: any;\n\n  // input per il login\n  inputlogemail: string;\n  inputlogpass: string;\n  datasend: Datalogin = null;\n\n  loginData: any;\n  loginError: any;\n\n  constructor(private http: HttpClient) { }\n\n  registeruser(){\n    let url = environment.url+\"/register\";\n    let users = {};\n    users[\"nome\"] = this.inputnome;\n    users[\"cognome\"] = this.inputcognome;\n    users[\"pass\"] = this.inputpass;\n    users[\"email\"] = this.inputemail;\n    users[\"privilegi\"] = \"utente\";\n\n    this.http.post(url, users).subscribe((data: any) => {\n      console.info(data);\n      this.usersData = data;\n      this.usersError = null;\n    }, error => {\n      this.usersError = error.error;\n      this.usersData = null;\n      console.error(this.usersError);\n    });\n  }\n\n  login(email: string, password: string): Observable<boolean> {\n      return this.http.post<{token: string}>(environment.url+'/login', {pass: password, email: email})\n        .pipe(\n          map(result => {\n            localStorage.setItem('access_token', result.token);\n            localStorage.setItem('token_decoded_userid', this.helper.decodeToken(localStorage.getItem('access_token')).userID)\n            return true;\n          })\n        );\n    }\n\n    logout() {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('token_decoded_userid');\n    }\n\n    public get loggedIn(): boolean {\n      return (localStorage.getItem('access_token') !== null);\n    }\n\n    public get adminControl(): boolean {\n      if(this.helper.decodeToken(localStorage.getItem('access_token')).privileges == 'admin'){\n        return true;\n      } else {\n        return false;\n      }\n\n    }\n\n    public get UserLoggedName(): string{\n      return this.helper.decodeToken(localStorage.getItem('access_token')).Nome\n    }\n    public get UserLoggedCognome(): string{\n      return this.helper.decodeToken(localStorage.getItem('access_token')).Cognome\n    }\n    public get UserLoggedEmail(): string{\n      return this.helper.decodeToken(localStorage.getItem('access_token')).Email\n    }\n\n}\n\nexport interface Datalogin{\n  pass: string,\n  email: string,\n}\n","<!--<td> <img src=\"{{ cardview.img }}\"></td> <br>\n<td> {{ cardview.cod }}</td> <br>\n<td> {{ cardview.nome }}</td> <br>\n<td> {{ cardview.attributo }}</td> <br>\n<td> {{ cardview.livello }}</td> <br>\n<td> {{ cardview.numero }}</td> <br>\n<td> {{ cardview.descrizione }}</td> <br>\n<td *ngIf=\"cardview.attacco != 22222 && cardview.attacco != 10000\"> {{ cardview.attacco }}</td> <br>\n<td *ngIf=\"cardview.attacco == 22222\"> ???? </td> <br>\n<td *ngIf=\"cardview.attacco == 10000\"> X000 </td> <br>\n<td *ngIf=\"cardview.difesa != 22222 && cardview.difesa != 10000\"> {{ cardview.difesa }}</td> <br>\n<td *ngIf=\"cardview.difesa == 22222\"> ???? </td> <br>\n<td *ngIf=\"cardview.difesa == 10000\"> X000 </td> <br>\n<td> {{ cardview.tipo }}</td> <br>\n<td> {{ cardview.blugem }}</td> <br>\n<td> {{ cardview.redgem }}</td> <br>\n<div id=\"espansioni\" *ngFor=\"let espansione of cardview.espansioni\">\n  <td> {{ espansione.nome }}</td> <td> {{ espansione.anno }}</td> <br>\n<div>-->\n<div class=\"sfondo\">\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"grid-container\">\n        <div class=\"img\"><img src=\"{{ cardview.img }}\"></div>\n        <div class=\"nome\"><font color=\"white\"><b>NOME: {{ cardview.nome }}</b></font></div>\n        <div class=\"attributo\"><font color=\"white\"><b>ATTRIBUTO: {{ cardview.attributo }}</b></font></div>\n        <div class=\"tipo\"><font color=\"white\"><b>TIPO: {{ cardview.tipo }}</b></font></div>\n        <div class=\"livello\"><font color=\"white\"><b *ngIf=\"cardview.livello != null\">LV: {{ cardview.livello }}</b></font></div>\n        <div class=\"descrizione\"><font color=\"white\"><b>{{ cardview.descrizione }}</b></font></div>\n        <div class=\"atk\" *ngIf=\"cardview.attacco != 22222 && cardview.attacco != 10000\"><font color=\"white\"><b *ngIf=\"cardview.attacco != null\">ATK: {{ cardview.attacco }}</b></font></div>\n        <div class=\"atk\" *ngIf=\"cardview.attacco == 22222\"><font color=\"white\"><b>ATK: ????</b></font></div>\n        <div class=\"atk\" *ngIf=\"cardview.attacco == 10000\"><font color=\"white\"><b>ATK: X000</b></font></div>\n        <div class=\"def\" *ngIf=\"cardview.difesa != 22222 && cardview.difesa != 10000\"><font color=\"white\"><b *ngIf=\"cardview.difesa != null\">DEF: {{ cardview.difesa }}</b></font></div>\n        <div class=\"def\" *ngIf=\"cardview.difesa == 22222\"><font color=\"white\"><b>DEF: ????</b></font></div>\n        <div class=\"def\" *ngIf=\"cardview.difesa == 10000\"><font color=\"white\"><b>DEF: X000</b></font></div>\n        <div class=\"codice\"><font color=\"white\"><b>SET: {{ cardview.cod }}</b></font></div>\n        <div class=\"numero\"><font color=\"white\"><b>COD: {{ cardview.numero }}</b></font></div>\n        <div class=\"pendeffect\"><font color=\"white\"><b *ngIf=\"cardview.pendeffect != null\">EFFETTO PEND: {{ cardview.pendeffect }}</b></font></div>\n        <div class=\"bluegem\"><font color=\"white\"><b *ngIf=\"cardview.blugem != null\">GEMME BLU: {{ cardview.blugem }}</b></font></div>\n        <div class=\"redgem\"><font color=\"white\"><b *ngIf=\"cardview.redgem != null\">GEMME ROSSE: {{ cardview.redgem }}</b></font></div>\n        <div id=\"espansioni\" class=\"espansioni\">\n          <font color=\"white\"><b *ngFor=\"let espansione of cardview.espansioni\">\n            {{ espansione.nome }}{{ espansione.anno }}\n          </b></font>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DatiService } from '../dati.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Card } from '../dati';\n\n@Component({\n  selector: 'app-carddetail',\n  templateUrl: './carddetail.component.html',\n  styleUrls: ['./carddetail.component.css']\n})\nexport class CarddetailComponent implements OnInit {\n  cardview: Card;\n  constructor(private dati: DatiService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.cardview = this.dati.getCard(id);\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"container\">\n    <div class=\"pagetitle\">\n      <h1 style=\"font-family: yu-gi-ho;\">Lista di tutte le carte</h1>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <select name=\"profile\" [value]=\"pack\" (input)=\"setPack( $event.target.value )\" class=\"browser-default custom-select\">\n          <option selected>Seleziona un espansione</option>\n          <option *ngFor=\"let envel of pacchetti.buste_espansione.envelopes\" value=\"{{ envel.nome }}\">{{ envel.nome }} year: {{ envel.anno }}</option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <table *ngIf=\"pack\" class=\"table table-sm table-dark\">\n            <tr id=\"tabletitle\">\n              <td><b>IMMAGINE</b></td>\n              <td><b>SET</b></td>\n              <td><b>NOME</b></td>\n              <td><b>QUANTITA'</b></td>\n              <td><b>TIPO DECK'</b></td>\n            </tr>\n            <tr *ngFor=\"let card of carte.dati_carte.cards | envelopesFilter: pack ; let i = index\">\n              <td><img src=\"{{ card.img }}\"></td>\n              <td>{{ card.cod }}</td>\n              <td>{{ card.nome }} </td>\n\n              <td *ngIf=\"auth.loggedIn\"><select name=\"profile\" [value]=\"carte.quantity[i]\" (input)=\"carte.quantity[i] = $event.target.value\">\n                <option value=\"1\">1_carta</option>\n                <option value=\"2\">2_carte</option>\n                <option value=\"3\">3_carte</option>\n              </select></td>\n\n              <td *ngIf=\"auth.loggedIn\"><select name=\"profile\" [value]=\"carte.typedeck[i]\" (input)=\"carte.typedeck[i] = $event.target.value\">\n                <option *ngIf=\"!(card.tipo.split('/')[1] == 'Fusione' || card.tipo.split('/')[1] == 'Synchro')\" value=\"main\">Main Deck</option>\n                <option *ngIf=\"(card.tipo.split('/')[1] == 'Fusione' || card.tipo.split('/')[1] == 'Synchro')\" value=\"extra\">Extra Deck</option>\n                <option value=\"side\">Side Deck</option>\n              </select></td>\n\n              <td *ngIf=\"auth.loggedIn\"> <button type=\"button\" name=\"card\" (click)=\"carte.AddToDeck(card,i);\">ADD</button> </td>\n              <td> <button type=\"button\" name=\"detailbutton\" (click)=\"showCardDetail(card)\">Card details</button> </td>\n            </tr>\n          </table>\n          <br><br>\n        </div>\n        <div id=\"pagedescription\">\n          <b><font color=\"white\">In questa pagina sono presenti tutti i vari set di tutte le espansioni esistenti a partire dal \"La Leggenda del drago bianco occhi blu\" fino ad oggi.\n            Se sei registrato puoi utilizzare queste carte per gestire il tuo deck virtualmente selezionando una quantità per ogni carta e infine il tipo di deck da aggiungere</font></b>\n            <li><b><font color=\"white\">\"Main deck\": il mazzo iniziale MIN 40 carte MAX 60 carte </font></b></li>\n            <li><b><font color=\"white\">\"Side deck\": (mazzo di supporto) MAX 15 carte,</font></b></li>\n            <li><b><font color=\"white\">\"Extra deck:\" mazzo contenente le carte mostro 'fusione', 'sinchro', 'xyz', 'link' MAX 15 carte</font></b></li>\n          <b><font color=\"white\">ricordati che secondo le regole ufficiali ogni deck può avere massimo tre copie per di ogni carta ad eccezione delle carte proibite, limitate e semi limitate.</font></b>\n        </div>\n      </div>\n    </div>\n</div>\n\n  <!-- {{ carte.dati_carte.cards[1].espansioni[0] | json}} -->\n","import { Component, OnInit } from '@angular/core';\nimport {EnvelopesFilterPipe} from '../envelopesfilter.pipe';\nimport {AuthService} from '../auth.service';\nimport {DatiService} from '../dati.service';\nimport {Cards, Card} from '../dati';\nimport {Envelopes} from '../dati';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-cardlist',\n  templateUrl: './cardlist.component.html',\n  styleUrls: ['./cardlist.component.css']\n})\nexport class CardlistComponent implements OnInit {\n\n  pack: string = \"\";\n  constructor(public carte: DatiService,\n              public pacchetti: DatiService,\n              public route: Router,\n              private router: Router,\n              private auth: AuthService) { }\n\n  ngOnInit() {\n    this.carte.Load_All_Cards();\n    this.pacchetti.ListofEnvelopes();\n  }\n\n  setPack(e: string){\n    this.pack = e;\n    console.log(e);\n  }\n\n  showCardDetail(card: Card){\n    this.carte.single_card = card;\n    this.route.navigate(['cards',this.carte.single_card.cod]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cards, Envelopes, Cardonly } from './dati';\nimport { Card } from './dati';\nimport { CardSelected } from './selectcard';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatiService {\n  card: Card = null;\n  dati_carte: Array<Cards> = [];\n  dati_carte_utente: Cards;\n  carta_selezionata: CardSelected = null;\n  buste_espansione: Envelopes;\n  single_card: Card;\n  card_only: Cardonly;\n\n  quantity: Array<number> = [this.dati_carte.length];\n  typedeck: Array<string> = [];\n\n  // input POST card\n  inputcod: string;\n  inputnome: string;\n  inputattributo: string;\n  inputlivello: number;\n  inputnumero: number;\n  inputdescrizione: string;\n  inputattacco: number;\n  inputdifesa: number;\n  inputtipo: string;\n  inputblugem: number;\n  inputredgem: number;\n  inputpendeffect: string;\n  inputimg: string;\n\n  // input POST envelope\n  inputenvelopename: string;\n  inputenvelopeyear: number;\n\n  // input post cards in envelope\n  inputcodcard: string;\n  inputcodenvelope: number;\n\n  constructor(private http: HttpClient, public authservice: AuthService) { }\n\n  Load_All_Cards(){\n    let url = environment.url+\"/allcards\";\n    this.http.get(url).subscribe((data: Array<Cards>) => {\n      this.dati_carte = data;\n    });\n  }\n\n  AddToDeck(card: Card, index: number){\n    this.card = card;\n    this.carta_selezionata = {\n      userid_fk: localStorage.getItem(\"token_decoded_userid\"),\n      cod_fk: this.card.cod,\n      qnt: this.quantity[index],\n      type: this.typedeck[index],\n    };\n    let url = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod+\"/type/\"+this.carta_selezionata.type\n    let url2 = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod\n    let url3 = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod+\"/type/\"+this.carta_selezionata.type\n    if(this.carta_selezionata.qnt != null && this.carta_selezionata.type != null){\n      this.http.get(url).subscribe((data: any) =>{ // modifica\n        console.log(data.card.cod_fk);\n        if(data.card.cod_fk == this.carta_selezionata.cod_fk && data.card.type == this.carta_selezionata.type){\n          this.http.put(url3, this.carta_selezionata).subscribe((data:any) => {\n            console.log(data);\n          });\n          this.dati_carte_utente[\"cards\"].splice(index, 1);\n          this.dati_carte_utente[\"cards\"].push(card)\n        }else if(data.card == \"false\"){\n          this.http.post(url2, this.carta_selezionata).subscribe((data: any) => {\n            alert(\"carta aggiunta con successo!\")\n          });\n        }\n      })\n    }else{\n      alert(\"ERRORE: devi aggiungere una quantità di carte da agiungere al deck e il tipo di deck\");\n    }\n\n  }\n\n  getCard(codice: string): Card{\n    let url = environment.url+\"/singlecard/\"+codice;\n    this.http.get(url).subscribe((data: Card) => {\n      this.single_card = data;\n    });\n    return this.single_card\n  }\n\n  deleteCardfromdeck(card: Card, index: number){\n    this.dati_carte_utente[\"cards\"].splice(index, 1);\n    this.card = card;\n    let url = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod+\"/type/\"+this.card.type\n    this.http.delete(url).subscribe((data: any) => {\n      console.info(\"Rimozione effetuata con successo\");\n    })\n  }\n\n  CardsLoggedUser(): any{\n    let url = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards\";\n    return this.http.get(url).subscribe((data: Cards) => {\n      this.dati_carte_utente = data;\n      //let a = data.cards[0].type;\n    });\n  };\n\n  ListofEnvelopes(){\n    let url = environment.url+\"/envelope/all\";\n    this.http.get(url).subscribe((data: Envelopes) => {\n      this.buste_espansione = data;\n    });\n  };\n\n  AddCardToList(){\n    let url = environment.url+\"/cards\"\n    let card = {};\n    card[\"cod\"] = this.inputcod;\n    card[\"nome\"] = this.inputnome;\n    card[\"attributo\"] = this.inputattributo;\n    card[\"livello\"] = this.inputlivello;\n    card[\"numero\"] = this.inputnumero;\n    card[\"descrizione\"] = this.inputdescrizione;\n    card[\"attacco\"] = this.inputattacco;\n    card[\"difesa\"] = this.inputdifesa;\n    card[\"tipo\"] = this.inputtipo;\n    card[\"blugem\"] = this.inputblugem;\n    card[\"redgem\"] = this.inputredgem;\n    card[\"pendeffect\"] = this.inputpendeffect;\n    card[\"img\"] = this.inputimg;\n\n    this.http.post(url, card).subscribe((data: any) => {\n      console.info(data);\n    });\n    alert(\"nuova carta aggiunta con successo!\")\n  }\n\n  AddEnvelope(){\n    let url = environment.url+\"/envelope\"\n    let envelope = {};\n\n    envelope[\"nome\"] = this.inputenvelopename;\n    envelope[\"anno\"] = this.inputenvelopeyear;\n\n    this.http.post(url, envelope).subscribe((data: any) => {\n      console.info(data);\n    })\n    alert(\"nuova busta aggiunta con successo!\")\n  }\n\n  AddCardToEnvelope(){\n    let url = environment.url+\"/cards/\"+ this.inputcodcard + \"/envelope/\"+ this.inputcodenvelope;\n    this.http.post(url, url).subscribe((data: any) => {})\n    alert(\"Relazione aggiunta con successo!\")\n  }\n}\n","<div class=\"sfondo\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">{{ recipesdata.single_recipe.nomeric }}</h1>\n  </div>\n    <div class=\"row\">\n      <div class=\"col\">\n          <div *ngFor=\"let card of recipesdata.singleric.cards; let i = index\" class=\"grid-container\">\n            <h6 *ngIf=\"card.type == 'main'\"><font color=\"yellow\"> MAIN DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'extra'\"><font color=\"blue\"> EXTRA DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'side'\"><font color=\"darkgreen\"> SIDE DECK </font></h6>\n            <div class=\"nome\"><font color=\"white\">NOME: {{ card.nome }}</font></div>\n            <div class=\"attributo\"><font color=\"white\">ATTRIBUTO: {{ card.attributo }}</font></div>\n            <div class=\"livello\"><font color=\"white\">LV:{{ card.livello }}</font></div>\n            <div class=\"tipo\"><font color=\"white\">{{ card.tipo }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco != 22222 && card.attacco != 10000\"><font color=\"white\">ATK: {{ card.attacco }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 22222\"><font color=\"white\">ATK: ????</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 10000\"><font color=\"white\">ATK: X000</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa != 22222 && card.attacco != 10000\"><font color=\"white\">DEF: {{ card.difesa }}</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 22222\"><font color=\"white\">DEF: ????</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 10000\"><font color=\"white\">DEF: X000</font></div>\n            <div class=\"descrizione\"><font color=\"white\">{{ card.descrizione }}</font></div>\n            <div class=\"blugem\"><font color=\"white\">{{ card.blugem }}</font></div>\n            <div class=\"redgem\"><font color=\"white\">{{ card.redgem }}</font></div>\n            <div class=\"img\" align=\"center\"><img src=\"{{ card.img }}\"></div>\n            <div class=\"pendeffect\"><font color=\"white\">{{ card.pendeffect }}</font></div>\n            <div class=\"qnt\"><font color=\"white\">QNT: {{ card.qnt }}</font></div>\n            <div class=\"button\"><button type=\"button\" name=\"card\" (click)=\"showCardDetail(card);\">Card Dettail</button></div>\n          </div>\n          <table class=\"table table-sm table-dark\">\n          <tr *ngFor=\"let comment of recipesdata.all_comment.comments; let i = index\">\n            <td>{{ comment.id_com }}</td>\n            <td>{{ comment.nome }}</td>\n            <td>{{ comment.cognome }}</td>\n            <td>{{ comment.desc }}</td>\n            <td>\n              <div *ngFor=\"let item of recipesdata.all_comment_ids.comments\">\n                <button *ngIf=\"item.id_com == comment.id_com\" type=\"button\" name=\"commentsdelete\" (click)=\"deletecom(comment.id_com,i)\" >DELETE</button>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n\n  <form>\n    <div [formGroup]=\"form_comment\">\n      <label for=\"comment\"><font color=\"white\">Lascia una recensione:</font></label>\n      <textarea formControlName=\"descrizione\" type=\"text\" class=\"form-control\" rows=\"5\" id=\"comment\"></textarea>\n      <button type=\"submit\" class=\"btn btn-primary\" name=\"postcommentbutton\" (click)=\"Addcom(id,commentbody)\">Commenta</button>\n    </div>\n  </form>\n\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RecipesService } from '../recipes.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {DatiService} from '../dati.service';\nimport {Cards, Card} from '../dati';\n\n@Component({\n  selector: 'app-deck-detail',\n  templateUrl: './deck-detail.component.html',\n  styleUrls: ['./deck-detail.component.css']\n})\nexport class DeckDetailComponent implements OnInit {\n\n  id: number;\n  commentbody: string;\n  form_comment: FormGroup;\n\n  constructor(private dati: DatiService,\n              public recipesdata: RecipesService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.recipesdata.Getrecipe(this.id);\n    this.recipesdata.Getrecipescomments(this.id);\n    this.recipesdata.Getrecipescommentsids(this.id, Number(localStorage.getItem(\"token_decoded_userid\")));\n\n    this.form_comment = new FormGroup({\n      descrizione: new FormControl(this.commentbody, Validators.required),\n    })\n    this.form_comment.valueChanges.subscribe(() => {\n      this.commentbody= this.form_comment.value.descrizione;\n    });\n  }\n\n  deletecom(id: number, ind: number){\n    this.recipesdata.DeleteComment(id, ind);\n    //this.recipesdata.Getrecipescomments(this.id);\n  }\n\n  Addcom(id: number, desc: string){\n    this.recipesdata.Addcomment(id,desc);\n    this.recipesdata.Getrecipescommentsids(this.id, Number(localStorage.getItem(\"token_decoded_userid\")));\n    //this.recipesdata.Getrecipescomments(this.id);\n  }\n\n  showCardDetail(card: Card){\n    this.dati.single_card = card;\n    this.router.navigate(['cards',this.dati.single_card.cod]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-duelistutility',\n  templateUrl: './duelistutility.component.html',\n  styleUrls: ['./duelistutility.component.css']\n})\nexport class DuelistutilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  duelistutility works!\n</p>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DatiService} from './dati.service';\nimport { Envelopes, Cards } from './dati';\n\n@Pipe({\n  name: 'envelopesFilter'\n})\nexport class EnvelopesFilterPipe implements PipeTransform {\n\n  transform(cardlist: any, packname: any): any {\n    if(!packname) return cardlist;\n      return cardlist.filter(function(card){\n        for(let y = 0; y<card.espansioni.length; y++){ // errore\n          if(card.espansioni[y].nome == packname){\n            return card.nome;\n          }\n        }\n    });\n  }\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorsService implements ErrorHandler {\n\n  constructor() { }\n\n  handleError(error: any){\n    console.error(error);\n\n    // if(error instanceof HttpErrorResponse){\n    //   alert(`server error: ${error.message}`)\n    // }else{\n    //   alert(`errore sconosciuto: ${error.message}`)\n    // }\n  }\n}\n","<div *ngIf=\"field.invalid && (field.touched || field.dirty) && field.errors\" class=\"text-danger\">\n  <div *ngIf=\"field.errors.required\">Campo obbligatorio</div>\n  <div *ngIf=\"field.errors.email\">E-mail errata</div>\n  <div *ngIf=\"field.errors.pattern\">Valore non conforme</div>\n</div>\n\n<div *ngFor=\"let msg of orderErrorMessages\" class=\"text-danger\">\n  {{ msg }}\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-field-error',\n  templateUrl: './field-error.component.html',\n  styleUrls: ['./field-error.component.css']\n})\nexport class FieldErrorComponent implements OnInit {\n  @Input() field: FormControl;\n  @Input() fieldName: string;\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n  get orderErrorMessages(){\n    if(this.auth.usersError && this.auth.usersError[this.fieldName] !== undefined){\n      return this.auth.usersError[this.fieldName];\n    }\n    return [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- <div id=\"informazioni\">\n  <div id=\"bg-dark\" class=\"bg-dark text-white\">\n    <div class=\"row\" style=\"padding:2%\">\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <h6>Contatti: </h6>\n        Sede Legale: Lungo Po Antonelli 189 <br>\n        10153 - Torino (TO) <br><br>\n\n        Email: andrea.franco96@virgilio.it <br>\n        Telefono: +39 347 258 4574\n        <br><br>\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <h6>SiteMap: </h6>\n        <a routerLink=\"/home\">Home</a><br>\n        <a routerLink=\"/about\">About Nasa</a><br>\n        <a routerLink=\"/galleries\">Galleries</a><br>\n        <a routerLink=\"/missions\">Missions</a><br>\n        <a routerLink=\"/articleoftheday\">Article of the Day</a><br><br>\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <h6>YU-GI-HO deck management system<br>\n          Page Last Updated: May 16, 2019<br>\n          Page Editor: Andrea Franco <br>\n          </h6>\n        <br>\n        <h2 class=\"nasa-apply-font\"> Yu-Gi-Oh Traiding card game</h2>\n      </div>\n\n      <div class=\"col-md-12\" style=\"text-align: left\">\n        <hr style=\"border-color: white\">\n      </div>\n\n    </div>\n\n    <div class=\"row\" style=\"padding-left: 2%\">\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <a href=\"https://www.facebook.com\" target=\"_blank\"><i class=\"fa fa-facebook-square\" style=\"font-size:36px\"></i></a>\n        <a href=\"https://linkedin.com\" target=\"_blank\"><i class=\"fa fa-linkedin-square\" style=\"font-size:36px; margin-left: 15px\"></i></a>\n        <a href=\"https://twitter.com\" target=\"_blank\"><i class=\"fa fa-twitter-square\" style=\"font-size:36px; margin-left: 15px\"></i></a>\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n      </div>\n    </div>\n\n    <div class=\"col-md-12\" style=\"text-align: left; padding-left: 2%; padding-bottom: 1%; font-size: 1em\">\n      Copyright © 2019 Krauser_Corporation srl. All rights reserved.\n    </div>\n  </div>\n</div> -->\n<div id=\"informazioni\">\n  <div id=\"bg-dark\" class=\"bg-dark text-white\">\n    <div id=\"id-footer-row1\" class=\"row-md\" style=\"padding: 10px\">\n      ©1996 KAZUKI TAKAHASHI <br>\n      ©2017 NAS・TV TOKYO\n    </div>\n    <div id=\"id-footer-row2\" class=\"row-md\" style=\"padding: 10px\">\n      ©2019 Konami Digital Entertainment &nbsp; | &nbsp; Powered by Krauser_Corporation &nbsp; | &nbsp; Contatti: andrea.franco@virgilio.it\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img id=\"home-wallpaper\" class=\"img-fluid\" [src]=\"'/assets/Yu Gi Oh Duel Monsters 224224 Latino MEGA   Identi.jpg'\" alt=\"yu-gi-ho_wallpaper\">\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/cardlist\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Card list</h4>\n      </a>\n    </div>\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/recipes\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Ricette</h4>\n      </a>\n    </div>\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/utility\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Utilità del duellante</h4>\n      </a>\n    </div>\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/rulespage\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Le regole ufficiali</h4>\n      </a>\n    </div>\n  <div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leggendary-cards',\n  templateUrl: './leggendary-cards.component.html',\n  styleUrls: ['./leggendary-cards.component.css']\n})\nexport class LeggendaryCardsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  leggendary-cards works!\n</p>\n","<h4 *ngIf=\"error\">{{error}}</h4>\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">Pagina di login</h1>\n  </div>\n<form id=\"registerform\" (ngSubmit)=\"submit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" class=\"form-control\" [(ngModel)]=\"username\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" class=\"form-control\" [(ngModel)]=\"password\" />\n  </div>\n  <div class=\"form-group col-3\">\n    <button class=\"btn btn-primary\" type=\"submit\">Login</button>\n  </div>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Loginstat} from '../users';\n\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public username: string;\n  public password: string;\n  public error: string;\n  constructor(public authservice: AuthService, private router: Router) { }\n\n  public submit() {\n    this.authservice.login(this.username, this.password)\n      .pipe(first())\n      .subscribe(\n        result => this.router.navigate(['cardlist']),\n        err => this.error = 'Could not authenticate'\n      );\n  }\n  ngOnInit() {\n  }\n\n}\n","<div class=\"gruppo\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">La tua area personale</h1>\n  </div>\n  <div class=\"row\">\n    <div id=\"pagedescription\" class=\"col-sm\">\n      <b id=\"desc\"><font color=\"white\">Benvenuto nella tua area personale giovane duellante!, qui gestire il tuo deck personale e pubblicare la tua ricetta sul database nell' elenco di tutte le ricette degli  compilando il form sottostante (sempre che tu lo voglia ovviamente)</font></b>\n    </div>\n  </div>\n      <div class=\"row\">\n        <div class=\"col\" >\n          <div *ngFor=\"let card of carte.dati_carte_utente.cards; let i = index\" class=\"grid-container\">\n            <h6 *ngIf=\"card.type == 'main'\"><font color=\"yellow\"> MAIN DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'extra'\"><font color=\"blue\"> EXTRA DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'side'\"><font color=\"darkgreen\"> SIDE DECK </font></h6>\n            <div class=\"nome\"><font color=\"white\">NOME: {{ card.nome }}</font></div>\n            <div class=\"attributo\"><font color=\"white\">ATTRIBUTO: {{ card.attributo }}</font></div>\n            <div class=\"livello\"><font color=\"white\">LV:{{ card.livello }}</font></div>\n            <div class=\"tipo\"><font color=\"white\">{{ card.tipo }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco != 22222 && card.attacco != 10000\"><font color=\"white\">ATK: {{ card.attacco }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 22222\"><font color=\"white\">ATK: ????</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 10000\"><font color=\"white\">ATK: X000</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa != 22222 && card.attacco != 10000\"><font color=\"white\">DEF: {{ card.difesa }}</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 22222\"><font color=\"white\">DEF: ????</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 10000\"><font color=\"white\">DEF: X000</font></div>\n            <div class=\"descrizione\"><font color=\"white\">{{ card.descrizione }}</font></div>\n            <div class=\"blugem\"><font color=\"white\">{{ card.blugem }}</font></div>\n            <div class=\"redgem\"><font color=\"white\">{{ card.redgem }}</font></div>\n            <div class=\"img\" align=\"center\"><img src=\"{{ card.img }}\"></div>\n            <div class=\"pendeffect\"><font color=\"white\">{{ card.pendeffect }}</font></div>\n            <div class=\"qnt\"><font color=\"white\">QNT: {{ card.qnt }}</font></div>\n            <div class=\"button\"><button type=\"button\" name=\"card\" (click)=\"delete(card,i);\">REM</button></div>\n          </div>\n          <br><br>\n        </div>\n      </div>\n</div>\n\n\n<div class=\"container\">\n  <div class=\"form-row\">\n      <div id=\"userdata\" class=\"form-group col-md-6\">\n        <h3><font color=\"white\">I tuoi dati personali</font></h3>\n        <font color=\"white\">Nome:</font> <input type=\"text\" [(ngModel)]=\"name\" class=\"form-control\">\n        <font color=\"white\">Cognome:</font> <input type=\"text\" [(ngModel)]=\"surname\" class=\"form-control\">\n        <font color=\"white\">Email:</font> <input type=\"text\" [(ngModel)]=\"email\" class=\"form-control\">\n      </div>\n\n<div id=\"formric\" class=\"form-group col-md-6\">\n  <h3><font color=\"white\">Publica la tua ricetta sul nostro database</font></h3>\n  <font color=\"white\">Nome ricetta:</font><input  #nomericetta placeholder=\"nome ricetta\" class=\"form-control\">\n  <font color=\"white\">descrizione:</font><input  #descrizione placeholder=\"descrizione\" class=\"form-control\">\n  <button class=\"btn btn-primary\" (click)=\"datarecipe.Addrecipes(nomericetta.value, descrizione.value); nomericetta.value=''; descrizione.value=''\">\n    Pubblica ricetta\n  </button>\n</div>\n      </div>\n    </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport {DatiService} from '../dati.service';\nimport {AuthService} from '../auth.service';\nimport {RecipesService} from '../recipes.service';\nimport {Cards, Card} from '../dati';\n\n@Component({\n  selector: 'app-loginpage',\n  templateUrl: './loginpage.component.html',\n  styleUrls: ['./loginpage.component.css']\n})\nexport class LoginpageComponent implements OnInit {\n  name: string;\n  surname: string;\n  email: string;\n  val: number = null;\n  constructor(public carte: DatiService,\n              public utente: AuthService,\n              public datarecipe: RecipesService) {\n                this.name = this.utente.UserLoggedName;\n                this.surname = this.utente.UserLoggedCognome;\n                this.email = this.utente.UserLoggedEmail;\n              }\n\n  ngOnInit() {\n    this.carte.CardsLoggedUser();\n  }\n\n  delete(card: Card, ind: number): void {\n    this.carte.deleteCardfromdeck(card, ind);\n  }\n\n}\n","<nav id=\"nav1\" class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" routerLink=\"/home\">\r\n    <h6 class=\"nasa-apply-font\" style=\"padding-left:10px\">Yu-Gi-Oh Deck management system</h6>\r\n  </a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" routerLink=\"/home\">Home</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" routerLink=\"/cardlist\">Card list</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!auth.loggedIn\">\r\n        <a class=\"nav-link\" routerLink=\"/register\">Register</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!auth.loggedIn\">\r\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"auth.loggedIn\">\r\n        <a class=\"nav-link\" routerLink=\"/loginpage\">Profile</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"auth.loggedIn && auth.adminControl\">\r\n        <a class=\"nav-link\" routerLink=\"/adminpage\">Administration</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" routerLink=\"/recipes\">Ricette degli utenti</a>\r\n      </li>\r\n      <a class=\"nav-link\" (click)=\"logout()\" href=\"#\" *ngIf=\"auth.loggedIn\">Logout</a>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public auth: AuthService, private router: Router) { }\n\n  logout() {\n    this.auth.logout();\n    this.router.navigate(['login']);\n  }\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'otherfilter'\n})\nexport class OtherfilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n","<div class=\"gruppo2\">\r\n  <div class=\"container\">\r\n    <div class=\"pagetitle\">\r\n      <h1 style=\"font-family: yu-gi-ho;\">Ricette degli utenti</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div id=\"pagedescription\" class=\"col-sm\">\r\n        <b id=\"desc\"><font color=\"white\">In questa pagina sono presenti tutte le Ricette dei Deck pubblicate dagli utenti, puoi usarle come riferimento per migliorare nei duelli. <br>\r\n        Hai la possibilità di vedere i dettagli di ogni ricetta cliccando sul pulsante \"Deck View\". <br> Se una ricetta è di tua proprietà\r\n        puoi anche decidere se eliminarla o meno.</font></b>\r\n      </div>\r\n    </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <table class=\"table table-sm table-dark\">\r\n            <tr id=\"tabletitle\">\r\n              <td><b>Cod</b></td>\r\n              <td><b>Nome</b></td>\r\n              <td><b>Descrizione</b></td>\r\n              <td><b>Dettagli ricetta</b></td>\r\n              <td><b>cancella</b></td>\r\n            </tr>\r\n            <tr *ngFor=\"let recipe of datarecipe.allric.recipes; let i = index;\">\r\n              <td>{{ recipe.idric }}</td>\r\n              <td>{{ recipe.nomeric }}</td>\r\n              <td>{{ recipe.desc }}</td>\r\n              <td> <button type=\"button\" name=\"recipedetailbutton\" (click)=\"showRecipeDetail(recipe)\">Deck View</button> </td>\r\n              <td>\r\n                <div *ngFor=\"let item of datarecipe.recipesid.recipes\">\r\n                  <button *ngIf=\"item.idric == recipe.idric\" type=\"button\" name=\"recipedetailbuttons\" (click)=\"deleterec(recipe.idric,i)\">DELETE</button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <br><br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { RecipesService, Recipe } from '../recipes.service';\nimport {Router} from '@angular/router';\nimport { Card } from '../dati';\n\n@Component({\n  selector: 'app-recipes-list',\n  templateUrl: './recipes-list.component.html',\n  styleUrls: ['./recipes-list.component.css']\n})\nexport class RecipesListComponent implements OnInit {\n\n  constructor( public datarecipe: RecipesService,\n               public route: Router,\n               private router: Router, ) { }\n\n  ngOnInit() {\n    this.datarecipe.Getallallrecipes()\n    this.datarecipe.Getrecipesidofuser();\n  }\n\n  showRecipeDetail(recipe: Recipe){\n    this.datarecipe.single_recipe = recipe;\n    this.route.navigate(['recipess', this.datarecipe.single_recipe.idric]);\n  }\n\n  deleterec(id: number, ind: number){\n    this.datarecipe.DeleteRecipe(id, ind);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cards, Card } from './dati';\nimport { HttpClient } from '@angular/common/http';\nimport {AuthService} from './auth.service';\n\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipesService {\n\n  single_recipe: Recipe;\n  singleric: Cards;\n\n  /*maindeck: Array<Cards> = [];\n  extradeck: Array<Cards> = [];\n  sidedeck: Array<Cards> = [];*/\n\n  allric: Recipes;\n  all_comment: Comments;\n\n  user_comment: Comment;\n\n  all_comment_ids: allidcomment;\n\n  common_id_comment: idcomment;\n\n  recipesid: Array<allidrecipe> = [];\n\n  constructor(private http: HttpClient, public utente: AuthService) { }\n\n  Addrecipes(name: string, desc: string): void{\n    name = name.trim();\n    desc = desc.trim();\n\n    if (!name) { return; }\n    if (!desc) { return; }\n    let url = environment.url+\"/ricetta/user/\"+localStorage.getItem(\"token_decoded_userid\")\n    let recipe = {}\n\n    recipe[\"nomeric\"] = name;\n    recipe[\"desc\"] = desc;\n\n    this.http.post(url, recipe).subscribe((data: any) => {\n        alert(data.status)\n    });\n\n  }\n\n  Getrecipe(id: number): Cards{\n    let url = environment.url+\"/ricetta/\"+id\n    this.http.get(url).subscribe((data: Cards) => {\n      this.singleric = data;\n    });\n    return this.singleric;\n  }\n\n  /*organizzed_ARRAYS(){\n    for(let card of this.singleric[\"cards\"]){\n      if(card.type == 'main'){\n        this.maindeck.push(card);\n      }else if(card.type == 'extra'){\n        this.extradeck.push(card);\n      }else if(card.type == 'side'){\n        this.sidedeck.push(card);\n      }\n    }\n    console.log(this.maindeck[0]);\n    console.log(this.extradeck[0]);\n    console.log(this.sidedeck[0]);\n  }*/\n\n  Getallallrecipes(): Recipes{\n    let url = environment.url+\"/recipes\"\n    this.http.get(url).subscribe((data: Recipes) => {\n      this.allric = data;\n    });\n    return this.allric;\n  }\n\n  Getrecipesidofuser(){\n    let url = environment.url+\"/recipes/\"+localStorage.getItem(\"token_decoded_userid\")+\"/user\";\n    this.http.get(url).subscribe((data: Array<allidrecipe>) => {\n      this.recipesid = data;\n    });\n    //console.log(this.recipesid['recipes'][0].idric);\n    //console.log(this.recipesid['recipes'].length);\n  }\n\n  ControllRecipe(id: number): number{\n    for(let i = 0; i<=this.recipesid['recipes'].length; i++){\n      if(this.recipesid['recipes'][i].idric == id){\n        return id;\n      }else{\n        return null;\n      }\n    }\n  }\n\n  Addcomment(id: number, desc: string){\n    let url = environment.url+\"/comments/user/\"+localStorage.getItem(\"token_decoded_userid\")+\"/ricetta/\"+id\n    let comment = {};\n    comment[\"desc\"] = desc;\n    this.user_comment = {\n      nome: this.utente.UserLoggedName,\n      cognome: this.utente.UserLoggedCognome,\n      id_com: null,\n      desc: desc\n    }\n\n    this.http.post(url, comment).subscribe((data: any) => {\n      console.info(data);\n      this.user_comment[\"id_com\"] = data.id\n      this.common_id_comment['id_com'] = data.id\n    });\n    //console.log(this.user_comment)\n    this.all_comment_ids[\"comments\"].push(this.common_id_comment);\n    this.all_comment[\"comments\"].push(this.user_comment);\n\n    alert(\"commento pubblicato!\")\n  }\n\n  Getrecipescomments(id: number){\n    let url = environment.url+\"/comments/recipe/\"+id;\n    this.http.get(url).subscribe((data: Comments) => {\n      this.all_comment = data;\n    });\n  }\n\n  Getrecipescommentsids(id: number, iduser: number){\n    let url = environment.url+\"/comments/recipe/\"+ id +\"/user/\" + iduser;\n    this.http.get(url).subscribe((data: allidcomment) => {\n      this.all_comment_ids = data;\n    });\n  }\n\n  DeleteRecipe(idrecipe: number, index: number){\n    this.allric[\"recipes\"].splice(index, 1);\n    let url = environment.url+\"/recipe/\"+idrecipe;\n    this.http.delete(url).subscribe((data: any) => {\n      console.log(data);\n    })\n  }\n\n  DeleteComment(idcomment: number, index: number){\n    this.all_comment[\"comments\"].splice(index, 1);\n    let url = environment.url+\"/comment/\"+idcomment;\n    this.http.delete(url).subscribe((data: any) => {\n      console.log(data);\n    })\n  }\n}\n\nexport interface Recipe{\n  idric: number;\n  nomeric: string;\n  desc: string;\n}\n\nexport interface Recipes{\n  recipes: Array<Recipe>;\n}\n\nexport interface idrecipe{\n  idric: number;\n}\n\nexport interface idcomment{\n  id_com: number;\n}\n\nexport interface allidrecipe{\n  recipes: Array<idrecipe>;\n}\n\nexport interface allidcomment{\n  comments: Array<idcomment>;\n}\n\nexport interface Comment{\n  nome: string;\n  cognome: string;\n  id_com: number;\n  desc: string;\n}\n\nexport interface Comments{\n  comments: Array<Comment>;\n}\n","<h4 *ngIf=\"authservice.usersError\" > Questa email è stata gia usata</h4>\n<div class=\"container\">\n<div class=\"pagetitle\">\n  <h1 style=\"font-family: yu-gi-ho;\">Pagina di registrazione</h1>\n</div>\n<form id=\"registerform\" [formGroup]=\"form\" novalidate>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputEmail4\">Email</label>\n      <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\">\n      <app-field-error [field]=\"form.controls.email\" fieldName=\"email\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputPassword4\">Password</label>\n      <input formControlName=\"pass\" type=\"password\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\">\n      <app-field-error [field]=\"form.controls.pass\" fieldName=\"pass\"></app-field-error>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"inputAddress\">FirstName</label>\n    <input formControlName=\"firstname\" type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"firstname\">\n    <app-field-error [field]=\"form.controls.firstname\" fieldName=\"firstname\"></app-field-error>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"inputAddress2\">Lastname</label>\n    <input formControlName=\"lastname\" type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"lastname\">\n    <app-field-error [field]=\"form.controls.lastname\" fieldName=\"lastname\"></app-field-error>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\">\n      <label class=\"form-check-label\" for=\"gridCheck\">\n        Check me out\n      </label>\n    </div>\n  </div>\n  <button *ngIf=\"form.valid\" type=\"submit\" class=\"btn btn-primary\" (click)=\"authservice.registeruser()\">Sign in</button>\n  <div *ngIf=\"authservice.usersData\" class=\"alert alert-success m4\" role=\"alert\">\n    Utente registrato con successo <br>\n  </div>\n</form>\n\n  <div id=\"pagedescription\" class=\"col-sm\">\n    <b >Registratevi per sfruttare le funzionalità dell' applicazione e potrete:</b>\n    <li>\n      gestire il vostro deck aggiungendo e rimuovendo le carte.\n    </li>\n    <li>\n      pubblicare e rimuovere la vostre ricette\n    </li>\n    <li>\n      commentare e recensire le ricette degli altrui\n    </li>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n  constructor(public authservice: AuthService) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      firstname: new FormControl(this.authservice.inputnome, Validators.required),\n      lastname: new FormControl(this.authservice.inputcognome, Validators.required),\n      email: new FormControl(this.authservice.inputemail, [Validators.required, Validators.email]),\n      pass: new FormControl(this.authservice.inputpass, Validators.required),\n  })\n  this.form.valueChanges.subscribe(() => {\n      this.authservice.inputnome= this.form.value.firstname;\n      this.authservice.inputcognome = this.form.value.lastname;\n      this.authservice.inputemail = this.form.value.email;\n      this.authservice.inputpass = this.form.value.pass;\n    });\n}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rulespage',\n  templateUrl: './rulespage.component.html',\n  styleUrls: ['./rulespage.component.css']\n})\nexport class RulespageComponent implements OnInit {\n  pdfSrc: string = '/assets/Rulebook_v9_it.pdf';\n  pagenumber: number = 1;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  Incrementpage(e: number){\n    if(this.pagenumber >= 1){\n      this.pagenumber++;\n    }\n  }\n\n  Decrementpage(e: number){\n    if(this.pagenumber == 1){\n      this.pagenumber = 1;\n    }else{\n      this.pagenumber--;\n    }\n  }\n}\n","<!-- <div>\n  <label>PDF src</label>\n  <input type=\"text\" placeholder=\"PDF src\" [(ngModel)]=\"pdfSrc\">\n</div>\n<pdf-viewer [src]=\"pdfSrc\" [render-text]=\"true\" style=\"display: block;\">\n</pdf-viewer> -->\n<div class=\"sfondo\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">Libro delle regole ufficiali</h1>\n  </div>\n    <div id=\"options\" class=\"row justify-content-center\">\n      <div id=\"indietro\" class=\"col-md-1\">\n        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"Decrementpage(pagenumber)\"> indietro </button>\n      </div>\n      <div id=\"avanti\" class=\"col-md-1\">\n        <button  class=\"btn btn-primary\" type=\"submit\" (click)=\"Incrementpage(pagenumber)\"> avanti</button>\n      </div>\n      <div id=\"pag\" class=\"col-md-2\">\n        <font color=\"white\">Pagina:</font><input value=\"Vai alla pagina\" class=\"form-control\" [(ngModel)]=\"pagenumber\" type=\"Text\">\n      </div>\n    </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <pdf-viewer [src]=\"pdfSrc\"\n        [render-text]=\"true\"\n        [page]=\"pagenumber\"\n        [original-size]=\"false\"\n        [zoom]=\"0.5\"\n        [show-all]=\"false\"\n        style=\"display: block;\">\n      </pdf-viewer>\n    </div>\n  </div>\n</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: \"https://0.0.0.0:3000\"\n  //url: \"http://0.0.0.0:3000\"\n  //url: \"http://localhost:8000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}