{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/adminpage/adminpage.component.ts","./src/app/adminpage/adminpage.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/carddetail/carddetail.component.html","./src/app/carddetail/carddetail.component.ts","./src/app/cardlist/cardlist.component.html","./src/app/cardlist/cardlist.component.ts","./src/app/dati.service.ts","./src/app/deck-detail/deck-detail.component.ts","./src/app/deck-detail/deck-detail.component.html","./src/app/duelistutility/duelistutility.component.ts","./src/app/duelistutility/duelistutility.component.html","./src/app/envelopesfilter.pipe.ts","./src/app/errors.service.ts","./src/app/field-error/field-error.component.html","./src/app/field-error/field-error.component.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/leggendary-cards/leggendary-cards.component.ts","./src/app/leggendary-cards/leggendary-cards.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/loginpage/loginpage.component.html","./src/app/loginpage/loginpage.component.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/otherfilter.pipe.ts","./src/app/recipes-list/recipes-list.component.html","./src/app/recipes-list/recipes-list.component.ts","./src/app/recipes.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/rulespage/rulespage.component.ts","./src/app/rulespage/rulespage.component.html","./src/environments/environment.ts","./src/main.ts","ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|fs","ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|http","ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|https","ignored|C:\\Users\\utente1\\Desktop\\Yu-gi-ho-app\\node_modules\\pdfjs-dist\\build|zlib"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { DatiService } from '../dati.service';\nconst UploadURL = 'http://localhost:8000/api/upload';\n@Component({\n  selector: 'app-adminpage',\n  templateUrl: './adminpage.component.html',\n  styleUrls: ['./adminpage.component.css']\n})\nexport class AdminpageComponent implements OnInit {\n  title = 'Upload a File';\n  form_carte: FormGroup;\n  form_carte_buste: FormGroup;\n  form_buste: FormGroup;\n  filename: string;\n\n  tipocarta: string;\n\n  tipomostro: string;\n\n  effetto: boolean;\n  gemelli: boolean;\n  tuner: boolean;\n  union: boolean;\n  spirit: boolean;\n  toon: boolean;\n  pendulum: boolean;\n  cyberse: boolean;\n  normale: boolean;\n\n  private uploader: FileUploader = new FileUploader({url: UploadURL, itemAlias: 'photo'});\n\n  constructor(public dati: DatiService) { }\n\n  ngOnInit() {\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n         console.log('FileUpload:uploaded:', item, status, response);\n     };\n     // form aggiunta carta\n     this.form_carte = new FormGroup({\n       codice: new FormControl(this.dati.inputcod, Validators.required),\n       nome: new FormControl(this.dati.inputnome, Validators.required),\n       attributo: new FormControl(this.dati.inputattributo, Validators.required),\n       livello: new FormControl(this.dati.inputlivello),\n       numero: new FormControl(this.dati.inputnumero, Validators.required),\n       descrizione: new FormControl(this.dati.inputdescrizione, Validators.required),\n       ATK: new FormControl(this.dati.inputattacco),\n       DEF: new FormControl(this.dati.inputdifesa),\n       tipo: new FormControl(this.dati.inputtipo, Validators.required),\n       extra: new FormControl(this.tipomostro),\n       gemmeblu: new FormControl(this.dati.inputblugem),\n       gemmerosse: new FormControl(this.dati.inputredgem),\n       pendulumeffect: new FormControl(this.dati.inputpendeffect),\n       linkimmagine: new FormControl(this.dati.inputimg, Validators.required),\n     })\n     this.form_carte.valueChanges.subscribe(() => {\n       this.dati.inputcod= this.form_carte.value.codice;\n       this.dati.inputnome = this.form_carte.value.nome;\n       this.dati.inputattributo = this.form_carte.value.attributo;\n       this.dati.inputlivello = this.form_carte.value.livello;\n       this.dati.inputnumero = this.form_carte.value.numero;\n       this.dati.inputdescrizione = this.form_carte.value.descrizione;\n       this.dati.inputattacco = this.form_carte.value.ATK;\n       this.dati.inputdifesa = this.form_carte.value.DEF;\n\n       if(!(this.form_carte.value.extra)){\n         this.form_carte.value.extra = \"\";\n       }\n\n       this.dati.inputtipo = this.form_carte.value.tipo + this.form_carte.value.extra;\n\n       if(this.effetto){\n         this.dati.inputtipo += \"Effetto/\"\n       }\n       if(this.gemelli){\n         this.dati.inputtipo += \"Gemelli/\"\n       }\n       if(this.tuner){\n         this.dati.inputtipo += \"Tuner/\"\n       }\n       if(this.union){\n         this.dati.inputtipo += \"Union/\"\n       }\n       if(this.spirit){\n         this.dati.inputtipo += \"Spirit/\"\n       }\n       if(this.toon){\n         this.dati.inputtipo += \"Toon/\"\n       }\n       if(this.pendulum){\n         this.dati.inputtipo += \"Pendulum/\"\n       }\n       if(this.cyberse){\n         this.dati.inputtipo += \"Cyberse/\"\n       }\n       if(this.normale){\n         this.dati.inputtipo += \"Normale/\"\n       }\n\n       this.dati.inputblugem = this.form_carte.value.gemmeblu;\n       this.dati.inputredgem = this.form_carte.value.gemmerosse;\n       this.dati.inputpendeffect = this.form_carte.value.pendulumeffect;\n\n       if(this.form_carte.value.linkimmagine != null){\n         this.filename = \"http://localhost:8000/\" + this.form_carte.value.linkimmagine.substring(12);\n         this.dati.inputimg = this.filename;\n       }\n\n     });\n     // form aggiunta carte in busta\n     this.dati.ListofEnvelopes();\n     this.form_carte_buste = new FormGroup({\n       codcard: new FormControl(this.dati.inputcodcard, Validators.required),\n       codespansione: new FormControl(this.dati.inputcodenvelope, Validators.required),\n     })\n     this.form_carte_buste.valueChanges.subscribe(() => {\n       this.dati.inputcodcard = this.form_carte_buste.value.codcard;\n       this.dati.inputcodenvelope = this.form_carte_buste.value.codespansione;\n     })\n\n     // form aggiunta nuova cod_espansione\n     this.form_buste = new FormGroup({\n       nomebusta: new FormControl(this.dati.inputenvelopename, Validators.required),\n       anno: new FormControl(this.dati.inputenvelopeyear, Validators.required)\n     })\n     this.form_buste.valueChanges.subscribe(() => {\n       this.dati.inputenvelopename = this.form_buste.value.nomebusta;\n       this.dati.inputenvelopeyear = this.form_buste.value.anno;\n     })\n  }\n\n  reset(){\n    this.filename = null;\n    this.dati.inputimg = null;\n    this.dati.inputtipo = null;\n    this.dati.inputnome = null;\n    this.dati.inputattributo = null;\n    this.dati.inputlivello = null;\n    this.dati.inputnumero = null;\n    this.dati.inputdescrizione = null;\n    this.dati.inputattacco = null;\n    this.dati.inputdifesa = null;\n    this.tipomostro = null;\n    this.dati.inputblugem = null;\n    this.dati.inputredgem = null;\n    this.dati.inputpendeffect = null;\n  }\n\n  setcardtype(e: string){\n    this.tipocarta = e;\n    console.log(e);\n  }\n}\n","<div class=\"group\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\"> <font color=\"blue\">Pagina di amministrazione</font></h1>\n  </div>\n  <div class=\"form-row\">\n    <h2 id=\"formchoice\">Quale carta vuoi aggiungere?</h2>\n    <div id=\"formchoice\" class=\"form-group col-md-3\">\n      <select type=\"text\" class=\"form-control\" (click)=\"setcardtype($event.target.value)\">\n        <option selected>Seleziona un tipo</option>\n        <option value=\"MOSTRO\">MOSTRO</option>\n        <option value=\"MAGIA\">MAGIA</option>\n        <option value=\"TRAPPOLA\">TRAPPOLA</option>\n      </select>\n  </div>\n</div>\n\n<form *ngIf=\"tipocarta == 'MOSTRO' || tipocarta == 'MAGIA' || tipocarta == 'TRAPPOLA'\" [formGroup]=\"form_carte\" novalidate>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Codice</font></b>\n      <input formControlName=\"codice\" type=\"text\" class=\"form-control\" placeholder=\"codice\">\n      <app-field-error [field]=\"form_carte.controls.codice\" fieldName=\"codice\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Nome</font></b>\n      <input formControlName=\"nome\" type=\"text\" class=\"form-control\" placeholder=\"nome\">\n      <app-field-error [field]=\"form_carte.controls.nome\" fieldName=\"nome\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Attributo</font></b>\n      <select formControlName=\"attributo\" type=\"text\" class=\"form-control\" placeholder=\"attributo\">\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"DARK\">DARK</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"DIVINE\">DIVINE</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"EARTH\">EARTH</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"FIRE\">FIRE</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"LIGHT\">LIGHT</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"WATER\">WATER</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"WIND\">WIND</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"SPELL\" selected>SPELL</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"TRAP\" selected>TRAP</option>\n      </select>\n      <app-field-error [field]=\"form_carte.controls.attributo\" fieldName=\"attributo\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Livello</font></b>\n      <select formControlName=\"livello\" type=\"number\" class=\"form-control\" placeholder=\"livello\">\n        <option type=\"number\" value=\"1\" >1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n        <option value=\"11\">11</option>\n        <option value=\"12\">12</option>\n      </select>\n      <app-field-error [field]=\"form_carte.controls.livello\" fieldName=\"livello\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Numero</font></b>\n      <input formControlName=\"numero\" type=\"text\" class=\"form-control\" placeholder=\"numero\">\n      <app-field-error [field]=\"form_carte.controls.numero\" fieldName=\"numero\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Descrizione</font></b>\n      <input formControlName=\"descrizione\" type=\"text\" class=\"form-control\" placeholder=\"descrizione\">\n      <app-field-error [field]=\"form_carte.controls.descrizione\" fieldName=\"descrizione\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">ATK</font></b>\n      <input formControlName=\"ATK\" type=\"number\" class=\"form-control\" placeholder=\"ATK\">\n      <app-field-error [field]=\"form_carte.controls.ATK\" fieldName=\"ATK\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">DEF</font></b>\n      <input formControlName=\"DEF\" type=\"number\" class=\"form-control\" placeholder=\"DEF\">\n      <app-field-error [field]=\"form_carte.controls.DEF\" fieldName=\"DEF\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Tipo</font></b>\n      <select formControlName=\"tipo\" type=\"text\" class=\"form-control\" placeholder=\"tipo\" (click)=\"this.dati.inputtipo = $event.target.value\">\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Acqua/\" >Acqua</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Bestia/\">Bestia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Guerriero-Bestia/\">Guerriero-Bestia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Fata/\">Fata</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Macchina/\">Macchina</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Incantatore/\">Incantatore</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Serpente-Marino/\">Serpente-Marino</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Tuono/\">Tuono</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Insetto/\">Insetto</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Psichico/\">Psichico</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Zombie/\">Zombie</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Dinosauro/\">Dinosauro</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Bestia Alata/\">Bestia Alata</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Divinità-Bestia/\">Divinità-Bestia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Pianta/\">Pianta</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Roccia/\">Roccia</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Guerriero/\">Guerriero</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Pesce/\">Pesce</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Rettile/\">Rettile</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Pyro/\">Pyro</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Drago/\">Drago</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Demone/\">Demone</option>\n        <option *ngIf=\"tipocarta == 'MOSTRO'\" value=\"Cyberverso/\">Cyberverso</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"Trappola_Normale\">Trappola Normale</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"Trappola_Continua\">Trappola Continua</option>\n        <option *ngIf=\"tipocarta == 'TRAPPOLA'\" value=\"Contro_Trappola\">Contro Trappola</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Normale\">Magia Normale</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Continua\">Magia Continua</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Rapida\">Magia Rapida</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Terreno\">Magia Terreno</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Rituale\">Magia Rituale</option>\n        <option *ngIf=\"tipocarta == 'MAGIA'\" value=\"Magia_Equipaggiamento\">Magia Equipaggiamento</option>\n      </select>\n      <app-field-error [field]=\"form_carte.controls.tipo\" fieldName=\"tipo\"></app-field-error>\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n        <b><font color=\"white\">Tipo carta Mostro:</font></b> <br>\n        <b><font color=\"red\">Link</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Link/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Xyz</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Xyz/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Fusione</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Fusione/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Synchro</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Synchro/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n        <b><font color=\"red\">Rituale</font></b> <input formControlName=\"extra\" class=\"form-control\" value=\"Ritual/\" name=\"extra\" type=\"radio\" (click)=\"this.tipomostro = $event.target.value\">\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Tipo effetto mostro:</font></b><br>\n      <b><font color=\"red\">Effetto</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox1 (change)=\"effetto = checkbox1.checked;\">\n      <b><font color=\"red\">Normale</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox9 (change)=\"normale = checkbox9.checked;\">\n      <b><font color=\"red\">Gemelli</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox2 (change)=\"gemelli = checkbox2.checked;\">\n      <b><font color=\"red\">Tuner</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox3 (change)=\"tuner = checkbox3.checked;\">\n      <b><font color=\"red\">Union</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox4 (change)=\"union = checkbox4.checked;\">\n      <b><font color=\"red\">Spirit</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox5 (change)=\"spirit = checkbox5.checked;\">\n      <b><font color=\"red\">Toon</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox6 (change)=\"toon = checkbox6.checked;\">\n      <b><font color=\"red\">Pendulum</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox7 (change)=\"pendulum = checkbox7.checked;\">\n      <b><font color=\"red\">Cyberse</font></b> <input class=\"form-control\" type=\"checkbox\" #checkbox8 (change)=\"cyberse = checkbox8.checked;\">\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Gemme blu (pendulum cards)</font></b>\n      <input formControlName=\"gemmeblu\" type=\"number\" class=\"form-control\" placeholder=\"Gemme blu\">\n      <app-field-error [field]=\"form_carte.controls.gemmeblu\" fieldName=\"gemmeblu\"></app-field-error>\n    </div>\n\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Gemme rosse (pendulum cards)</font></b>\n      <input formControlName=\"gemmerosse\" type=\"number\" class=\"form-control\" placeholder=\"Gemme rosse\">\n      <app-field-error [field]=\"form_carte.controls.gemmerosse\" fieldName=\"gemmerosse\"></app-field-error>\n    </div>\n    <div *ngIf=\"tipocarta == 'MOSTRO'\" class=\"form-group col-md-3\">\n      <b><font color=\"white\">Effetto pendulum (pendulum cards)</font></b>\n      <input formControlName=\"pendulumeffect\" type=\"text\" class=\"form-control\" placeholder=\"Effetto pendulum\">\n      <app-field-error [field]=\"form_carte.controls.pendulumeffect\" fieldName=\"pendulumeffect\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-3\">\n      <b><font color=\"white\">Immagine carta</font></b>\n      <input formControlName=\"linkimmagine\" class=\"form-control\" type=\"file\" name=\"photo\" ng2FileSelect [uploader]=\"uploader\" />\n      <app-field-error [field]=\"form_carte.controls.linkimmagine\" fieldName=\"linkimmagine\"></app-field-error>\n    </div>\n  </div>\n  <div class=\"form-group col-md-3\">\n    <button type=\"button\" class=\"btn btn-success btn-s\"\n      (click)=\"uploader.uploadAll(); dati.AddCardToList(); reset()\" *ngIf=\"form_carte.valid\">\n      Upload data\n    </button>\n  </div>\n</form>\n\n<div id=\"cardintoenvelope\" class=\"form-row\">\n<form [formGroup]=\"form_carte_buste\" novalidate>\n  <h2>Aggiunta carta in busta</h2>\n  <div class=\"form-group col-md\">\n    <b>Codice carta</b>\n    <input formControlName=\"codcard\" type=\"text\" class=\"form-control\" [(ngModel)]=\"this.form_carte.value.codice\">\n  </div>\n  <div class=\"form-group col-md\">\n    <b>Espansione</b>\n    <select formControlName=\"codespansione\" type=\"number\" class=\"form-control\" placeholder=\"cod_espansione\">\n      <option *ngFor=\"let envelopes of dati.buste_espansione.envelopes\" value=\"{{ envelopes.envid }}\">{{ envelopes.nome }}</option>\n    </select>\n  </div>\n  <div class=\"form-group col-md\">\n    <button (click)=\"dati.AddCardToEnvelope()\"  type=\"submit\" class=\"btn btn-primary\" *ngIf=\"form_carte_buste.valid\">Aggiungi</button>\n  </div>\n</form>\n\n<form [formGroup]=\"form_buste\">\n  <h2>Aggiunta di una nuova busta</h2>\n  <div class=\"form-group col-md\">\n    <b>Nome busta</b>\n    <input formControlName=\"nomebusta\" type=\"text\" class=\"form-control\" placeholder=\"nome\">\n  </div>\n  <div class=\"form-group col-md\">\n    <b>Anno di uscita</b>\n    <input formControlName=\"anno\" type=\"number\" class=\"form-control\" placeholder=\"anno\">\n  </div>\n  <div class=\"form-group col-md\">\n    <button (click)=dati.AddEnvelope() type=\"submit\" class=\"btn btn-primary\">Aggiungi busta</button>\n  </div>\n</form>\n</div>\n</div>\n</div>\n<!--<input type=\"file\" name=\"photo\" ng2FileSelect [uploader]=\"uploader\" />\n<button type=\"button\" class=\"btn btn-success btn-s\"\n  (click)=\"uploader.uploadAll()\"\n  [disabled]=\"!uploader.getNotUploadedItems().length\" >\n      Upload an Image\n</button>-->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {HomeComponent} from './home/home.component';\nimport {CardlistComponent} from './cardlist/cardlist.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {LoginpageComponent} from './loginpage/loginpage.component';\nimport {CarddetailComponent} from './carddetail/carddetail.component';\nimport {AdminpageComponent} from './adminpage/adminpage.component';\n\nimport {RecipesListComponent} from './recipes-list/recipes-list.component';\nimport {DuelistutilityComponent} from './duelistutility/duelistutility.component';\nimport {DeckDetailComponent} from './deck-detail/deck-detail.component';\nimport {RulespageComponent} from './rulespage/rulespage.component';\n\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'cardlist', component: CardlistComponent, },\n  { path: 'register', component: RegisterComponent, },\n  { path: 'login', component: LoginComponent },\n  { path: 'loginpage', component: LoginpageComponent, canActivate: [AuthGuard] },\n  { path: 'cards/:id', component: CarddetailComponent, },\n  { path: 'recipess/:id', component: DeckDetailComponent, },\n  { path: 'adminpage', component: AdminpageComponent, canActivate: [AuthGuard] },\n  { path: 'recipes', component: RecipesListComponent, },\n  { path: 'rulespage', component: RulespageComponent, },\n  { path: 'utility', component: DuelistutilityComponent,},\n  { path: '**', redirectTo: '/home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Yu-gi-ho-app';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { CardlistComponent } from './cardlist/cardlist.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoginpageComponent } from './loginpage/loginpage.component';\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { registerLocaleData } from '@angular/common';\nimport localeIt from '@angular/common/locales/it';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ErrorsService } from './errors.service';\n\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthGuard } from './auth.guard';\n\nimport { AuthService } from './auth.service';\nimport { AdminpageComponent } from './adminpage/adminpage.component';\nimport { EnvelopesFilterPipe } from './envelopesfilter.pipe';\nimport { CarddetailComponent } from './carddetail/carddetail.component';\nimport { RulespageComponent } from './rulespage/rulespage.component';\nimport { DuelistutilityComponent } from './duelistutility/duelistutility.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { OtherfilterPipe } from './otherfilter.pipe';\nimport { FieldErrorComponent } from './field-error/field-error.component';\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { RecipesListComponent } from './recipes-list/recipes-list.component';\nimport { DeckDetailComponent } from './deck-detail/deck-detail.component';\nimport { LeggendaryCardsComponent } from './leggendary-cards/leggendary-cards.component';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\n// ...\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CardlistComponent,\n    RegisterComponent,\n    LoginComponent,\n    LoginpageComponent,\n    AdminpageComponent,\n    EnvelopesFilterPipe,\n    CarddetailComponent,\n    RulespageComponent,\n    DuelistutilityComponent,\n    FooterComponent,\n    OtherfilterPipe,\n    FieldErrorComponent,\n    RecipesListComponent,\n    DeckDetailComponent,\n    LeggendaryCardsComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FileUploadModule,\n    PdfViewerModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:8000'],\n        blacklistedRoutes: ['localhost:8000/login']\n      }\n    })\n  ],\n  providers: [{provide: ErrorHandler, useClass: ErrorsService},\n    AuthService,\n    AuthGuard], //provvede alla gestione degli errori\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nregisterLocaleData(localeIt, 'it')\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('access_token')) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Users } from './users';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  // input per la registrazione\n  helper = new JwtHelperService();\n\n  users: Users = null;\n\n  inputnome: string;\n  inputcognome: string;\n  inputpass: string;\n  inputemail: string;\n\n  usersData: any;\n  usersError: any;\n\n  // input per il login\n  inputlogemail: string;\n  inputlogpass: string;\n  datasend: Datalogin = null;\n\n  loginData: any;\n  loginError: any;\n\n  constructor(private http: HttpClient) { }\n\n  registeruser(){\n    let url = environment.url+\"/register\";\n    let users = {};\n    users[\"nome\"] = this.inputnome;\n    users[\"cognome\"] = this.inputcognome;\n    users[\"pass\"] = this.inputpass;\n    users[\"email\"] = this.inputemail;\n    users[\"privilegi\"] = \"utente\";\n\n    this.http.post(url, users).subscribe((data: any) => {\n      console.info(data);\n      this.usersData = data;\n      this.usersError = null;\n    }, error => {\n      this.usersError = error.error;\n      this.usersData = null;\n      console.error(this.usersError);\n    });\n  }\n\n  login(email: string, password: string): Observable<boolean> {\n      return this.http.post<{token: string}>(environment.url+'/login', {pass: password, email: email})\n        .pipe(\n          map(result => {\n            localStorage.setItem('access_token', result.token);\n            localStorage.setItem('token_decoded_userid', this.helper.decodeToken(localStorage.getItem('access_token')).userID)\n            return true;\n          })\n        );\n    }\n\n    logout() {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('token_decoded_userid');\n    }\n\n    public get loggedIn(): boolean {\n      return (localStorage.getItem('access_token') !== null);\n    }\n\n    public get adminControl(): boolean {\n      if(this.helper.decodeToken(localStorage.getItem('access_token')).privileges == 'admin'){\n        return true;\n      } else {\n        return false;\n      }\n\n    }\n\n    public get UserLoggedName(): string{\n      return this.helper.decodeToken(localStorage.getItem('access_token')).Nome\n    }\n    public get UserLoggedCognome(): string{\n      return this.helper.decodeToken(localStorage.getItem('access_token')).Cognome\n    }\n    public get UserLoggedEmail(): string{\n      return this.helper.decodeToken(localStorage.getItem('access_token')).Email\n    }\n\n}\n\nexport interface Datalogin{\n  pass: string,\n  email: string,\n}\n","<!--<td> <img src=\"{{ cardview.img }}\"></td> <br>\n<td> {{ cardview.cod }}</td> <br>\n<td> {{ cardview.nome }}</td> <br>\n<td> {{ cardview.attributo }}</td> <br>\n<td> {{ cardview.livello }}</td> <br>\n<td> {{ cardview.numero }}</td> <br>\n<td> {{ cardview.descrizione }}</td> <br>\n<td *ngIf=\"cardview.attacco != 22222 && cardview.attacco != 10000\"> {{ cardview.attacco }}</td> <br>\n<td *ngIf=\"cardview.attacco == 22222\"> ???? </td> <br>\n<td *ngIf=\"cardview.attacco == 10000\"> X000 </td> <br>\n<td *ngIf=\"cardview.difesa != 22222 && cardview.difesa != 10000\"> {{ cardview.difesa }}</td> <br>\n<td *ngIf=\"cardview.difesa == 22222\"> ???? </td> <br>\n<td *ngIf=\"cardview.difesa == 10000\"> X000 </td> <br>\n<td> {{ cardview.tipo }}</td> <br>\n<td> {{ cardview.blugem }}</td> <br>\n<td> {{ cardview.redgem }}</td> <br>\n<div id=\"espansioni\" *ngFor=\"let espansione of cardview.espansioni\">\n  <td> {{ espansione.nome }}</td> <td> {{ espansione.anno }}</td> <br>\n<div>-->\n<div class=\"sfondo\">\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"grid-container\">\n        <div class=\"img\"><img src=\"{{ cardview.img }}\"></div>\n        <div class=\"nome\"><font color=\"white\"><b>NOME: {{ cardview.nome }}</b></font></div>\n        <div class=\"attributo\"><font color=\"white\"><b>ATTRIBUTO: {{ cardview.attributo }}</b></font></div>\n        <div class=\"tipo\"><font color=\"white\"><b>TIPO: {{ cardview.tipo }}</b></font></div>\n        <div class=\"livello\"><font color=\"white\"><b *ngIf=\"cardview.livello != null\">LV: {{ cardview.livello }}</b></font></div>\n        <div class=\"descrizione\"><font color=\"white\"><b>{{ cardview.descrizione }}</b></font></div>\n        <div class=\"atk\" *ngIf=\"cardview.attacco != 22222 && cardview.attacco != 10000\"><font color=\"white\"><b *ngIf=\"cardview.attacco != null\">ATK: {{ cardview.attacco }}</b></font></div>\n        <div class=\"atk\" *ngIf=\"cardview.attacco == 22222\"><font color=\"white\"><b>ATK: ????</b></font></div>\n        <div class=\"atk\" *ngIf=\"cardview.attacco == 10000\"><font color=\"white\"><b>ATK: X000</b></font></div>\n        <div class=\"def\" *ngIf=\"cardview.difesa != 22222 && cardview.difesa != 10000\"><font color=\"white\"><b *ngIf=\"cardview.difesa != null\">DEF: {{ cardview.difesa }}</b></font></div>\n        <div class=\"def\" *ngIf=\"cardview.difesa == 22222\"><font color=\"white\"><b>DEF: ????</b></font></div>\n        <div class=\"def\" *ngIf=\"cardview.difesa == 10000\"><font color=\"white\"><b>DEF: X000</b></font></div>\n        <div class=\"codice\"><font color=\"white\"><b>SET: {{ cardview.cod }}</b></font></div>\n        <div class=\"numero\"><font color=\"white\"><b>COD: {{ cardview.numero }}</b></font></div>\n        <div class=\"pendeffect\"><font color=\"white\"><b *ngIf=\"cardview.pendeffect != null\">EFFETTO PEND: {{ cardview.pendeffect }}</b></font></div>\n        <div class=\"bluegem\"><font color=\"white\"><b *ngIf=\"cardview.blugem != null\">GEMME BLU: {{ cardview.blugem }}</b></font></div>\n        <div class=\"redgem\"><font color=\"white\"><b *ngIf=\"cardview.redgem != null\">GEMME ROSSE: {{ cardview.redgem }}</b></font></div>\n        <div id=\"espansioni\" class=\"espansioni\">\n          <font color=\"white\"><b *ngFor=\"let espansione of cardview.espansioni\">\n            {{ espansione.nome }}{{ espansione.anno }}\n          </b></font>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DatiService } from '../dati.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Card } from '../dati';\n\n@Component({\n  selector: 'app-carddetail',\n  templateUrl: './carddetail.component.html',\n  styleUrls: ['./carddetail.component.css']\n})\nexport class CarddetailComponent implements OnInit {\n  cardview: Card;\n  constructor(private dati: DatiService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.cardview = this.dati.getCard(id);\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"container\">\n    <div class=\"pagetitle\">\n      <h1 style=\"font-family: yu-gi-ho;\">Lista di tutte le carte</h1>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <select name=\"profile\" [value]=\"pack\" (input)=\"setPack( $event.target.value )\" class=\"browser-default custom-select\">\n          <option selected>Seleziona un espansione</option>\n          <option *ngFor=\"let envel of pacchetti.buste_espansione.envelopes\" value=\"{{ envel.nome }}\">{{ envel.nome }} year: {{ envel.anno }}</option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <table *ngIf=\"pack\" class=\"table table-sm table-dark\">\n            <tr id=\"tabletitle\">\n              <td><b>IMMAGINE</b></td>\n              <td><b>SET</b></td>\n              <td><b>NOME</b></td>\n              <td><b>QUANTITA'</b></td>\n              <td><b>TIPO DECK'</b></td>\n            </tr>\n            <tr *ngFor=\"let card of carte.dati_carte.cards | envelopesFilter: pack ; let i = index\">\n              <td><img src=\"{{ card.img }}\"></td>\n              <td>{{ card.cod }}</td>\n              <td>{{ card.nome }} </td>\n\n              <td *ngIf=\"auth.loggedIn\"><select name=\"profile\" [value]=\"carte.quantity[i]\" (input)=\"carte.quantity[i] = $event.target.value\">\n                <option value=\"1\">1_carta</option>\n                <option value=\"2\">2_carte</option>\n                <option value=\"3\">3_carte</option>\n              </select></td>\n\n              <td *ngIf=\"auth.loggedIn\"><select name=\"profile\" [value]=\"carte.typedeck[i]\" (input)=\"carte.typedeck[i] = $event.target.value\">\n                <option *ngIf=\"!(card.tipo.split('/')[1] == 'Fusione' || card.tipo.split('/')[1] == 'Synchro')\" value=\"main\">Main Deck</option>\n                <option *ngIf=\"(card.tipo.split('/')[1] == 'Fusione' || card.tipo.split('/')[1] == 'Synchro')\" value=\"extra\">Extra Deck</option>\n                <option value=\"side\">Side Deck</option>\n              </select></td>\n\n              <td *ngIf=\"auth.loggedIn\"> <button type=\"button\" name=\"card\" (click)=\"carte.AddToDeck(card,i);\">ADD</button> </td>\n              <td> <button type=\"button\" name=\"detailbutton\" (click)=\"showCardDetail(card)\">Card details</button> </td>\n            </tr>\n          </table>\n          <br><br>\n        </div>\n        <div id=\"pagedescription\">\n          <b><font color=\"white\">In questa pagina sono presenti tutti i vari set di tutte le espansioni esistenti a partire dal \"La Leggenda del drago bianco occhi blu\" fino ad oggi.\n            Se sei registrato puoi utilizzare queste carte per gestire il tuo deck virtualmente selezionando una quantità per ogni carta e infine il tipo di deck da aggiungere</font></b>\n            <li><b><font color=\"white\">\"Main deck\": il mazzo iniziale MIN 40 carte MAX 60 carte </font></b></li>\n            <li><b><font color=\"white\">\"Side deck\": (mazzo di supporto) MAX 15 carte,</font></b></li>\n            <li><b><font color=\"white\">\"Extra deck:\" mazzo contenente le carte mostro 'fusione', 'sinchro', 'xyz', 'link' MAX 15 carte</font></b></li>\n          <b><font color=\"white\">ricordati che secondo le regole ufficiali ogni deck può avere massimo tre copie per di ogni carta ad eccezione delle carte proibite, limitate e semi limitate.</font></b>\n        </div>\n      </div>\n    </div>\n</div>\n\n  <!-- {{ carte.dati_carte.cards[1].espansioni[0] | json}} -->\n","import { Component, OnInit } from '@angular/core';\nimport {EnvelopesFilterPipe} from '../envelopesfilter.pipe';\nimport {AuthService} from '../auth.service';\nimport {DatiService} from '../dati.service';\nimport {Cards, Card} from '../dati';\nimport {Envelopes} from '../dati';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-cardlist',\n  templateUrl: './cardlist.component.html',\n  styleUrls: ['./cardlist.component.css']\n})\nexport class CardlistComponent implements OnInit {\n\n  pack: string = \"\";\n  constructor(public carte: DatiService,\n              public pacchetti: DatiService,\n              public route: Router,\n              private router: Router,\n              private auth: AuthService) { }\n\n  ngOnInit() {\n    this.carte.Load_All_Cards();\n    this.pacchetti.ListofEnvelopes();\n  }\n\n  setPack(e: string){\n    this.pack = e;\n    console.log(e);\n  }\n\n  showCardDetail(card: Card){\n    this.carte.single_card = card;\n    this.route.navigate(['cards',this.carte.single_card.cod]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cards, Envelopes, Cardonly } from './dati';\nimport { Card } from './dati';\nimport { CardSelected } from './selectcard';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatiService {\n  card: Card = null;\n  dati_carte: Array<Cards> = [];\n  dati_carte_utente: Cards;\n  carta_selezionata: CardSelected = null;\n  buste_espansione: Envelopes;\n  single_card: Card;\n  card_only: Cardonly;\n\n  quantity: Array<number> = [this.dati_carte.length];\n  typedeck: Array<string> = [];\n\n  // input POST card\n  inputcod: string;\n  inputnome: string;\n  inputattributo: string;\n  inputlivello: number;\n  inputnumero: number;\n  inputdescrizione: string;\n  inputattacco: number;\n  inputdifesa: number;\n  inputtipo: string;\n  inputblugem: number;\n  inputredgem: number;\n  inputpendeffect: string;\n  inputimg: string;\n\n  // input POST envelope\n  inputenvelopename: string;\n  inputenvelopeyear: number;\n\n  // input post cards in envelope\n  inputcodcard: string;\n  inputcodenvelope: number;\n\n  constructor(private http: HttpClient, public authservice: AuthService) { }\n\n  Load_All_Cards(){\n    let url = environment.url+\"/allcards\";\n    this.http.get(url).subscribe((data: Array<Cards>) => {\n      this.dati_carte = data;\n    });\n  }\n\n  AddToDeck(card: Card, index: number){\n    this.card = card;\n    this.carta_selezionata = {\n      userid_fk: localStorage.getItem(\"token_decoded_userid\"),\n      cod_fk: this.card.cod,\n      qnt: this.quantity[index],\n      type: this.typedeck[index],\n    };\n    let url = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod+\"/type/\"+this.carta_selezionata.type\n    let url2 = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod\n    let url3 = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod+\"/type/\"+this.carta_selezionata.type\n    if(this.carta_selezionata.qnt != null && this.carta_selezionata.type != null){\n      this.http.get(url).subscribe((data: any) =>{ // modifica\n        console.log(data.card.cod_fk);\n        if(data.card.cod_fk == this.carta_selezionata.cod_fk && data.card.type == this.carta_selezionata.type){\n          this.http.put(url3, this.carta_selezionata).subscribe((data:any) => {\n            console.log(data);\n          });\n          this.dati_carte_utente[\"cards\"].splice(index, 1);\n          this.dati_carte_utente[\"cards\"].push(card)\n        }else if(data.card == \"false\"){\n          this.http.post(url2, this.carta_selezionata).subscribe((data: any) => {\n            alert(\"carta aggiunta con successo!\")\n          });\n        }\n      })\n    }else{\n      alert(\"ERRORE: devi aggiungere una quantità di carte da agiungere al deck e il tipo di deck\");\n    }\n\n  }\n\n  getCard(codice: string): Card{\n    let url = environment.url+\"/singlecard/\"+codice;\n    this.http.get(url).subscribe((data: Card) => {\n      this.single_card = data;\n    });\n    return this.single_card\n  }\n\n  deleteCardfromdeck(card: Card, index: number){\n    this.dati_carte_utente[\"cards\"].splice(index, 1);\n    this.card = card;\n    let url = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards/\"+this.card.cod+\"/type/\"+this.card.type\n    this.http.delete(url).subscribe((data: any) => {\n      console.info(\"Rimozione effetuata con successo\");\n    })\n  }\n\n  CardsLoggedUser(): any{\n    let url = environment.url+\"/users/\"+localStorage.getItem(\"token_decoded_userid\")+\"/cards\";\n    return this.http.get(url).subscribe((data: Cards) => {\n      this.dati_carte_utente = data;\n      //let a = data.cards[0].type;\n    });\n  };\n\n  ListofEnvelopes(){\n    let url = environment.url+\"/envelope/all\";\n    this.http.get(url).subscribe((data: Envelopes) => {\n      this.buste_espansione = data;\n    });\n  };\n\n  AddCardToList(){\n    let url = environment.url+\"/cards\"\n    let card = {};\n    card[\"cod\"] = this.inputcod;\n    card[\"nome\"] = this.inputnome;\n    card[\"attributo\"] = this.inputattributo;\n    card[\"livello\"] = this.inputlivello;\n    card[\"numero\"] = this.inputnumero;\n    card[\"descrizione\"] = this.inputdescrizione;\n    card[\"attacco\"] = this.inputattacco;\n    card[\"difesa\"] = this.inputdifesa;\n    card[\"tipo\"] = this.inputtipo;\n    card[\"blugem\"] = this.inputblugem;\n    card[\"redgem\"] = this.inputredgem;\n    card[\"pendeffect\"] = this.inputpendeffect;\n    card[\"img\"] = this.inputimg;\n\n    this.http.post(url, card).subscribe((data: any) => {\n      console.info(data);\n    });\n    alert(\"nuova carta aggiunta con successo!\")\n  }\n\n  AddEnvelope(){\n    let url = environment.url+\"/envelope\"\n    let envelope = {};\n\n    envelope[\"nome\"] = this.inputenvelopename;\n    envelope[\"anno\"] = this.inputenvelopeyear;\n\n    this.http.post(url, envelope).subscribe((data: any) => {\n      console.info(data);\n    })\n    alert(\"nuova busta aggiunta con successo!\")\n  }\n\n  AddCardToEnvelope(){\n    let url = environment.url+\"/cards/\"+ this.inputcodcard + \"/envelope/\"+ this.inputcodenvelope;\n    this.http.post(url, url).subscribe((data: any) => {})\n    alert(\"Relazione aggiunta con successo!\")\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RecipesService } from '../recipes.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {DatiService} from '../dati.service';\nimport {Cards, Card} from '../dati';\n\n@Component({\n  selector: 'app-deck-detail',\n  templateUrl: './deck-detail.component.html',\n  styleUrls: ['./deck-detail.component.css']\n})\nexport class DeckDetailComponent implements OnInit {\n\n  id: number;\n  commentbody: string;\n  form_comment: FormGroup;\n\n  constructor(private dati: DatiService,\n              public recipesdata: RecipesService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.recipesdata.Getrecipe(this.id);\n    this.recipesdata.Getrecipescomments(this.id);\n    this.recipesdata.Getrecipescommentsids(this.id, Number(localStorage.getItem(\"token_decoded_userid\")));\n\n    this.form_comment = new FormGroup({\n      descrizione: new FormControl(this.commentbody, Validators.required),\n    })\n    this.form_comment.valueChanges.subscribe(() => {\n      this.commentbody= this.form_comment.value.descrizione;\n    });\n  }\n\n  deletecom(id: number, ind: number){\n    this.recipesdata.DeleteComment(id, ind);\n    //this.recipesdata.Getrecipescomments(this.id);\n  }\n\n  Addcom(id: number, desc: string){\n    this.recipesdata.Addcomment(id,desc);\n    this.recipesdata.Getrecipescommentsids(this.id, Number(localStorage.getItem(\"token_decoded_userid\")));\n    //this.recipesdata.Getrecipescomments(this.id);\n  }\n\n  showCardDetail(card: Card){\n    this.dati.single_card = card;\n    this.router.navigate(['cards',this.dati.single_card.cod]);\n  }\n}\n","<div class=\"sfondo\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">{{ recipesdata.single_recipe.nomeric }}</h1>\n  </div>\n    <div class=\"row\">\n      <div class=\"col\">\n          <div *ngFor=\"let card of recipesdata.singleric.cards; let i = index\" class=\"grid-container\">\n            <h6 *ngIf=\"card.type == 'main'\"><font color=\"yellow\"> MAIN DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'extra'\"><font color=\"blue\"> EXTRA DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'side'\"><font color=\"darkgreen\"> SIDE DECK </font></h6>\n            <div class=\"nome\"><font color=\"white\">NOME: {{ card.nome }}</font></div>\n            <div class=\"attributo\"><font color=\"white\">ATTRIBUTO: {{ card.attributo }}</font></div>\n            <div class=\"livello\"><font color=\"white\">LV:{{ card.livello }}</font></div>\n            <div class=\"tipo\"><font color=\"white\">{{ card.tipo }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco != 22222 && card.attacco != 10000\"><font color=\"white\">ATK: {{ card.attacco }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 22222\"><font color=\"white\">ATK: ????</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 10000\"><font color=\"white\">ATK: X000</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa != 22222 && card.attacco != 10000\"><font color=\"white\">DEF: {{ card.difesa }}</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 22222\"><font color=\"white\">DEF: ????</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 10000\"><font color=\"white\">DEF: X000</font></div>\n            <div class=\"descrizione\"><font color=\"white\">{{ card.descrizione }}</font></div>\n            <div class=\"blugem\"><font color=\"white\">{{ card.blugem }}</font></div>\n            <div class=\"redgem\"><font color=\"white\">{{ card.redgem }}</font></div>\n            <div class=\"img\" align=\"center\"><img src=\"{{ card.img }}\"></div>\n            <div class=\"pendeffect\"><font color=\"white\">{{ card.pendeffect }}</font></div>\n            <div class=\"qnt\"><font color=\"white\">QNT: {{ card.qnt }}</font></div>\n            <div class=\"button\"><button type=\"button\" name=\"card\" (click)=\"showCardDetail(card);\">Card Dettail</button></div>\n          </div>\n          <table class=\"table table-sm table-dark\">\n          <tr *ngFor=\"let comment of recipesdata.all_comment.comments; let i = index\">\n            <td>{{ comment.id_com }}</td>\n            <td>{{ comment.nome }}</td>\n            <td>{{ comment.cognome }}</td>\n            <td>{{ comment.desc }}</td>\n            <td>\n              <div *ngFor=\"let item of recipesdata.all_comment_ids.comments\">\n                <button *ngIf=\"item.id_com == comment.id_com\" type=\"button\" name=\"commentsdelete\" (click)=\"deletecom(comment.id_com,i)\" >DELETE</button>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n\n  <form>\n    <div [formGroup]=\"form_comment\">\n      <label for=\"comment\"><font color=\"white\">Lascia una recensione:</font></label>\n      <textarea formControlName=\"descrizione\" type=\"text\" class=\"form-control\" rows=\"5\" id=\"comment\"></textarea>\n      <button type=\"submit\" class=\"btn btn-primary\" name=\"postcommentbutton\" (click)=\"Addcom(id,commentbody)\">Commenta</button>\n    </div>\n  </form>\n\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-duelistutility',\n  templateUrl: './duelistutility.component.html',\n  styleUrls: ['./duelistutility.component.css']\n})\nexport class DuelistutilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  duelistutility works!\n</p>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DatiService} from './dati.service';\nimport { Envelopes, Cards } from './dati';\n\n@Pipe({\n  name: 'envelopesFilter'\n})\nexport class EnvelopesFilterPipe implements PipeTransform {\n\n  transform(cardlist: any, packname: any): any {\n    if(!packname) return cardlist;\n      return cardlist.filter(function(card){\n        for(let y = 0; y<card.espansioni.length; y++){ // errore\n          if(card.espansioni[y].nome == packname){\n            return card.nome;\n          }\n        }\n    });\n  }\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorsService implements ErrorHandler {\n\n  constructor() { }\n\n  handleError(error: any){\n    console.error(error);\n\n    // if(error instanceof HttpErrorResponse){\n    //   alert(`server error: ${error.message}`)\n    // }else{\n    //   alert(`errore sconosciuto: ${error.message}`)\n    // }\n  }\n}\n","<div *ngIf=\"field.invalid && (field.touched || field.dirty) && field.errors\" class=\"text-danger\">\n  <div *ngIf=\"field.errors.required\">Campo obbligatorio</div>\n  <div *ngIf=\"field.errors.email\">E-mail errata</div>\n  <div *ngIf=\"field.errors.pattern\">Valore non conforme</div>\n</div>\n\n<div *ngFor=\"let msg of orderErrorMessages\" class=\"text-danger\">\n  {{ msg }}\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-field-error',\n  templateUrl: './field-error.component.html',\n  styleUrls: ['./field-error.component.css']\n})\nexport class FieldErrorComponent implements OnInit {\n  @Input() field: FormControl;\n  @Input() fieldName: string;\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n  get orderErrorMessages(){\n    if(this.auth.usersError && this.auth.usersError[this.fieldName] !== undefined){\n      return this.auth.usersError[this.fieldName];\n    }\n    return [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- <div id=\"informazioni\">\n  <div id=\"bg-dark\" class=\"bg-dark text-white\">\n    <div class=\"row\" style=\"padding:2%\">\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <h6>Contatti: </h6>\n        Sede Legale: Lungo Po Antonelli 189 <br>\n        10153 - Torino (TO) <br><br>\n\n        Email: andrea.franco96@virgilio.it <br>\n        Telefono: +39 347 258 4574\n        <br><br>\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <h6>SiteMap: </h6>\n        <a routerLink=\"/home\">Home</a><br>\n        <a routerLink=\"/about\">About Nasa</a><br>\n        <a routerLink=\"/galleries\">Galleries</a><br>\n        <a routerLink=\"/missions\">Missions</a><br>\n        <a routerLink=\"/articleoftheday\">Article of the Day</a><br><br>\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <h6>YU-GI-HO deck management system<br>\n          Page Last Updated: May 16, 2019<br>\n          Page Editor: Andrea Franco <br>\n          </h6>\n        <br>\n        <h2 class=\"nasa-apply-font\"> Yu-Gi-Oh Traiding card game</h2>\n      </div>\n\n      <div class=\"col-md-12\" style=\"text-align: left\">\n        <hr style=\"border-color: white\">\n      </div>\n\n    </div>\n\n    <div class=\"row\" style=\"padding-left: 2%\">\n      <div class=\"col-md-4\" style=\"text-align: left\">\n        <a href=\"https://www.facebook.com\" target=\"_blank\"><i class=\"fa fa-facebook-square\" style=\"font-size:36px\"></i></a>\n        <a href=\"https://linkedin.com\" target=\"_blank\"><i class=\"fa fa-linkedin-square\" style=\"font-size:36px; margin-left: 15px\"></i></a>\n        <a href=\"https://twitter.com\" target=\"_blank\"><i class=\"fa fa-twitter-square\" style=\"font-size:36px; margin-left: 15px\"></i></a>\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n      </div>\n\n      <div class=\"col-md-4\" style=\"text-align: left\">\n      </div>\n    </div>\n\n    <div class=\"col-md-12\" style=\"text-align: left; padding-left: 2%; padding-bottom: 1%; font-size: 1em\">\n      Copyright © 2019 Krauser_Corporation srl. All rights reserved.\n    </div>\n  </div>\n</div> -->\n<div id=\"informazioni\">\n  <div id=\"bg-dark\" class=\"bg-dark text-white\">\n    <div id=\"id-footer-row1\" class=\"row-md\" style=\"padding: 10px\">\n      ©1996 KAZUKI TAKAHASHI <br>\n      ©2017 NAS・TV TOKYO\n    </div>\n    <div id=\"id-footer-row2\" class=\"row-md\" style=\"padding: 10px\">\n      ©2019 Konami Digital Entertainment &nbsp; | &nbsp; Powered by Krauser_Corporation &nbsp; | &nbsp; Contatti: andrea.franco@virgilio.it\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img id=\"home-wallpaper\" class=\"img-fluid\" [src]=\"'/assets/Yu Gi Oh Duel Monsters 224224 Latino MEGA   Identi.jpg'\" alt=\"yu-gi-ho_wallpaper\">\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/cardlist\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Card list</h4>\n      </a>\n    </div>\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/recipes\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Ricette</h4>\n      </a>\n    </div>\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/utility\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Utilità del duellante</h4>\n      </a>\n    </div>\n    <div class=\"col-md\" routerLinkActive=\"active\">\n      <a class=\"menu-main\" routerLink=\"/rulespage\">\n        <h4 class=\"nasa-apply-font\" id=\"par\">Le regole ufficiali</h4>\n      </a>\n    </div>\n  <div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leggendary-cards',\n  templateUrl: './leggendary-cards.component.html',\n  styleUrls: ['./leggendary-cards.component.css']\n})\nexport class LeggendaryCardsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  leggendary-cards works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Loginstat} from '../users';\n\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public username: string;\n  public password: string;\n  public error: string;\n  constructor(public authservice: AuthService, private router: Router) { }\n\n  public submit() {\n    this.authservice.login(this.username, this.password)\n      .pipe(first())\n      .subscribe(\n        result => this.router.navigate(['cardlist']),\n        err => this.error = 'Could not authenticate'\n      );\n  }\n  ngOnInit() {\n  }\n\n}\n","<h4 *ngIf=\"error\">{{error}}</h4>\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">Pagina di login</h1>\n  </div>\n<form id=\"registerform\" (ngSubmit)=\"submit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" class=\"form-control\" [(ngModel)]=\"username\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" class=\"form-control\" [(ngModel)]=\"password\" />\n  </div>\n  <div class=\"form-group col-3\">\n    <button class=\"btn btn-primary\" type=\"submit\">Login</button>\n  </div>\n</form>\n</div>\n","<div class=\"gruppo\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">La tua area personale</h1>\n  </div>\n  <div class=\"row\">\n    <div id=\"pagedescription\" class=\"col-sm\">\n      <b id=\"desc\"><font color=\"white\">Benvenuto nella tua area personale giovane duellante!, qui gestire il tuo deck personale e pubblicare la tua ricetta sul database nell' elenco di tutte le ricette degli  compilando il form sottostante (sempre che tu lo voglia ovviamente)</font></b>\n    </div>\n  </div>\n      <div class=\"row\">\n        <div class=\"col\" >\n          <div *ngFor=\"let card of carte.dati_carte_utente.cards; let i = index\" class=\"grid-container\">\n            <h6 *ngIf=\"card.type == 'main'\"><font color=\"yellow\"> MAIN DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'extra'\"><font color=\"blue\"> EXTRA DECK </font></h6>\n            <h6 *ngIf=\"card.type == 'side'\"><font color=\"darkgreen\"> SIDE DECK </font></h6>\n            <div class=\"nome\"><font color=\"white\">NOME: {{ card.nome }}</font></div>\n            <div class=\"attributo\"><font color=\"white\">ATTRIBUTO: {{ card.attributo }}</font></div>\n            <div class=\"livello\"><font color=\"white\">LV:{{ card.livello }}</font></div>\n            <div class=\"tipo\"><font color=\"white\">{{ card.tipo }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco != 22222 && card.attacco != 10000\"><font color=\"white\">ATK: {{ card.attacco }}</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 22222\"><font color=\"white\">ATK: ????</font></div>\n            <div class=\"atk\" *ngIf=\"card.attacco == 10000\"><font color=\"white\">ATK: X000</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa != 22222 && card.attacco != 10000\"><font color=\"white\">DEF: {{ card.difesa }}</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 22222\"><font color=\"white\">DEF: ????</font></div>\n            <div class=\"def\" *ngIf=\"card.difesa == 10000\"><font color=\"white\">DEF: X000</font></div>\n            <div class=\"descrizione\"><font color=\"white\">{{ card.descrizione }}</font></div>\n            <div class=\"blugem\"><font color=\"white\">{{ card.blugem }}</font></div>\n            <div class=\"redgem\"><font color=\"white\">{{ card.redgem }}</font></div>\n            <div class=\"img\" align=\"center\"><img src=\"{{ card.img }}\"></div>\n            <div class=\"pendeffect\"><font color=\"white\">{{ card.pendeffect }}</font></div>\n            <div class=\"qnt\"><font color=\"white\">QNT: {{ card.qnt }}</font></div>\n            <div class=\"button\"><button type=\"button\" name=\"card\" (click)=\"delete(card,i);\">REM</button></div>\n          </div>\n          <br><br>\n        </div>\n      </div>\n</div>\n\n\n<div class=\"container\">\n  <div class=\"form-row\">\n      <div id=\"userdata\" class=\"form-group col-md-6\">\n        <h3><font color=\"white\">I tuoi dati personali</font></h3>\n        <font color=\"white\">Nome:</font> <input type=\"text\" [(ngModel)]=\"name\" class=\"form-control\">\n        <font color=\"white\">Cognome:</font> <input type=\"text\" [(ngModel)]=\"surname\" class=\"form-control\">\n        <font color=\"white\">Email:</font> <input type=\"text\" [(ngModel)]=\"email\" class=\"form-control\">\n      </div>\n\n<div id=\"formric\" class=\"form-group col-md-6\">\n  <h3><font color=\"white\">Publica la tua ricetta sul nostro database</font></h3>\n  <font color=\"white\">Nome ricetta:</font><input  #nomericetta placeholder=\"nome ricetta\" class=\"form-control\">\n  <font color=\"white\">descrizione:</font><input  #descrizione placeholder=\"descrizione\" class=\"form-control\">\n  <button class=\"btn btn-primary\" (click)=\"datarecipe.Addrecipes(nomericetta.value, descrizione.value); nomericetta.value=''; descrizione.value=''\">\n    Pubblica ricetta\n  </button>\n</div>\n      </div>\n    </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport {DatiService} from '../dati.service';\nimport {AuthService} from '../auth.service';\nimport {RecipesService} from '../recipes.service';\nimport {Cards, Card} from '../dati';\n\n@Component({\n  selector: 'app-loginpage',\n  templateUrl: './loginpage.component.html',\n  styleUrls: ['./loginpage.component.css']\n})\nexport class LoginpageComponent implements OnInit {\n  name: string;\n  surname: string;\n  email: string;\n  val: number = null;\n  constructor(public carte: DatiService,\n              public utente: AuthService,\n              public datarecipe: RecipesService) {\n                this.name = this.utente.UserLoggedName;\n                this.surname = this.utente.UserLoggedCognome;\n                this.email = this.utente.UserLoggedEmail;\n              }\n\n  ngOnInit() {\n    this.carte.CardsLoggedUser();\n  }\n\n  delete(card: Card, ind: number): void {\n    this.carte.deleteCardfromdeck(card, ind);\n  }\n\n}\n","<nav id=\"nav1\" class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" routerLink=\"/home\">\r\n    <h6 class=\"nasa-apply-font\" style=\"padding-left:10px\">Yu-Gi-Oh Deck management system</h6>\r\n  </a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" routerLink=\"/home\">Home</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" routerLink=\"/cardlist\">Card list</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!auth.loggedIn\">\r\n        <a class=\"nav-link\" routerLink=\"/register\">Register</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!auth.loggedIn\">\r\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"auth.loggedIn\">\r\n        <a class=\"nav-link\" routerLink=\"/loginpage\">Profile</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"auth.loggedIn && auth.adminControl\">\r\n        <a class=\"nav-link\" routerLink=\"/adminpage\">Administration</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" routerLink=\"/recipes\">Ricette degli utenti</a>\r\n      </li>\r\n      <a class=\"nav-link\" (click)=\"logout()\" href=\"#\" *ngIf=\"auth.loggedIn\">Logout</a>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public auth: AuthService, private router: Router) { }\n\n  logout() {\n    this.auth.logout();\n    this.router.navigate(['login']);\n  }\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'otherfilter'\n})\nexport class OtherfilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n","<div class=\"gruppo2\">\r\n  <div class=\"container\">\r\n    <div class=\"pagetitle\">\r\n      <h1 style=\"font-family: yu-gi-ho;\">Ricette degli utenti</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div id=\"pagedescription\" class=\"col-sm\">\r\n        <b id=\"desc\"><font color=\"white\">In questa pagina sono presenti tutte le Ricette dei Deck pubblicate dagli utenti, puoi usarle come riferimento per migliorare nei duelli. <br>\r\n        Hai la possibilità di vedere i dettagli di ogni ricetta cliccando sul pulsante \"Deck View\". <br> Se una ricetta è di tua proprietà\r\n        puoi anche decidere se eliminarla o meno.</font></b>\r\n      </div>\r\n    </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <table class=\"table table-sm table-dark\">\r\n            <tr id=\"tabletitle\">\r\n              <td><b>Cod</b></td>\r\n              <td><b>Nome</b></td>\r\n              <td><b>Descrizione</b></td>\r\n              <td><b>Dettagli ricetta</b></td>\r\n              <td><b>cancella</b></td>\r\n            </tr>\r\n            <tr *ngFor=\"let recipe of datarecipe.allric.recipes; let i = index;\">\r\n              <td>{{ recipe.idric }}</td>\r\n              <td>{{ recipe.nomeric }}</td>\r\n              <td>{{ recipe.desc }}</td>\r\n              <td> <button type=\"button\" name=\"recipedetailbutton\" (click)=\"showRecipeDetail(recipe)\">Deck View</button> </td>\r\n              <td>\r\n                <div *ngFor=\"let item of datarecipe.recipesid.recipes\">\r\n                  <button *ngIf=\"item.idric == recipe.idric\" type=\"button\" name=\"recipedetailbuttons\" (click)=\"deleterec(recipe.idric,i)\">DELETE</button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <br><br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { RecipesService, Recipe } from '../recipes.service';\nimport {Router} from '@angular/router';\nimport { Card } from '../dati';\n\n@Component({\n  selector: 'app-recipes-list',\n  templateUrl: './recipes-list.component.html',\n  styleUrls: ['./recipes-list.component.css']\n})\nexport class RecipesListComponent implements OnInit {\n\n  constructor( public datarecipe: RecipesService,\n               public route: Router,\n               private router: Router, ) { }\n\n  ngOnInit() {\n    this.datarecipe.Getallallrecipes()\n    this.datarecipe.Getrecipesidofuser();\n  }\n\n  showRecipeDetail(recipe: Recipe){\n    this.datarecipe.single_recipe = recipe;\n    this.route.navigate(['recipess', this.datarecipe.single_recipe.idric]);\n  }\n\n  deleterec(id: number, ind: number){\n    this.datarecipe.DeleteRecipe(id, ind);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cards, Card } from './dati';\nimport { HttpClient } from '@angular/common/http';\nimport {AuthService} from './auth.service';\n\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipesService {\n\n  single_recipe: Recipe;\n  singleric: Cards;\n\n  /*maindeck: Array<Cards> = [];\n  extradeck: Array<Cards> = [];\n  sidedeck: Array<Cards> = [];*/\n\n  allric: Recipes;\n  all_comment: Comments;\n\n  user_comment: Comment;\n\n  all_comment_ids: allidcomment;\n\n  common_id_comment: idcomment;\n\n  recipesid: Array<allidrecipe> = [];\n\n  constructor(private http: HttpClient, public utente: AuthService) { }\n\n  Addrecipes(name: string, desc: string): void{\n    name = name.trim();\n    desc = desc.trim();\n\n    if (!name) { return; }\n    if (!desc) { return; }\n    let url = environment.url+\"/ricetta/user/\"+localStorage.getItem(\"token_decoded_userid\")\n    let recipe = {}\n\n    recipe[\"nomeric\"] = name;\n    recipe[\"desc\"] = desc;\n\n    this.http.post(url, recipe).subscribe((data: any) => {\n        alert(data.status)\n    });\n\n  }\n\n  Getrecipe(id: number): Cards{\n    let url = environment.url+\"/ricetta/\"+id\n    this.http.get(url).subscribe((data: Cards) => {\n      this.singleric = data;\n    });\n    return this.singleric;\n  }\n\n  /*organizzed_ARRAYS(){\n    for(let card of this.singleric[\"cards\"]){\n      if(card.type == 'main'){\n        this.maindeck.push(card);\n      }else if(card.type == 'extra'){\n        this.extradeck.push(card);\n      }else if(card.type == 'side'){\n        this.sidedeck.push(card);\n      }\n    }\n    console.log(this.maindeck[0]);\n    console.log(this.extradeck[0]);\n    console.log(this.sidedeck[0]);\n  }*/\n\n  Getallallrecipes(): Recipes{\n    let url = environment.url+\"/recipes\"\n    this.http.get(url).subscribe((data: Recipes) => {\n      this.allric = data;\n    });\n    return this.allric;\n  }\n\n  Getrecipesidofuser(){\n    let url = environment.url+\"/recipes/\"+localStorage.getItem(\"token_decoded_userid\")+\"/user\";\n    this.http.get(url).subscribe((data: Array<allidrecipe>) => {\n      this.recipesid = data;\n    });\n    //console.log(this.recipesid['recipes'][0].idric);\n    //console.log(this.recipesid['recipes'].length);\n  }\n\n  ControllRecipe(id: number): number{\n    for(let i = 0; i<=this.recipesid['recipes'].length; i++){\n      if(this.recipesid['recipes'][i].idric == id){\n        return id;\n      }else{\n        return null;\n      }\n    }\n  }\n\n  Addcomment(id: number, desc: string){\n    let url = environment.url+\"/comments/user/\"+localStorage.getItem(\"token_decoded_userid\")+\"/ricetta/\"+id\n    let comment = {};\n    comment[\"desc\"] = desc;\n    this.user_comment = {\n      nome: this.utente.UserLoggedName,\n      cognome: this.utente.UserLoggedCognome,\n      id_com: null,\n      desc: desc\n    }\n\n    this.http.post(url, comment).subscribe((data: any) => {\n      console.info(data);\n      this.user_comment[\"id_com\"] = data.id\n      this.common_id_comment['id_com'] = data.id\n    });\n    //console.log(this.user_comment)\n    this.all_comment_ids[\"comments\"].push(this.common_id_comment);\n    this.all_comment[\"comments\"].push(this.user_comment);\n\n    alert(\"commento pubblicato!\")\n  }\n\n  Getrecipescomments(id: number){\n    let url = environment.url+\"/comments/recipe/\"+id;\n    this.http.get(url).subscribe((data: Comments) => {\n      this.all_comment = data;\n    });\n  }\n\n  Getrecipescommentsids(id: number, iduser: number){\n    let url = environment.url+\"/comments/recipe/\"+ id +\"/user/\" + iduser;\n    this.http.get(url).subscribe((data: allidcomment) => {\n      this.all_comment_ids = data;\n    });\n  }\n\n  DeleteRecipe(idrecipe: number, index: number){\n    this.allric[\"recipes\"].splice(index, 1);\n    let url = environment.url+\"/recipe/\"+idrecipe;\n    this.http.delete(url).subscribe((data: any) => {\n      console.log(data);\n    })\n  }\n\n  DeleteComment(idcomment: number, index: number){\n    this.all_comment[\"comments\"].splice(index, 1);\n    let url = environment.url+\"/comment/\"+idcomment;\n    this.http.delete(url).subscribe((data: any) => {\n      console.log(data);\n    })\n  }\n}\n\nexport interface Recipe{\n  idric: number;\n  nomeric: string;\n  desc: string;\n}\n\nexport interface Recipes{\n  recipes: Array<Recipe>;\n}\n\nexport interface idrecipe{\n  idric: number;\n}\n\nexport interface idcomment{\n  id_com: number;\n}\n\nexport interface allidrecipe{\n  recipes: Array<idrecipe>;\n}\n\nexport interface allidcomment{\n  comments: Array<idcomment>;\n}\n\nexport interface Comment{\n  nome: string;\n  cognome: string;\n  id_com: number;\n  desc: string;\n}\n\nexport interface Comments{\n  comments: Array<Comment>;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n  constructor(public authservice: AuthService) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      firstname: new FormControl(this.authservice.inputnome, Validators.required),\n      lastname: new FormControl(this.authservice.inputcognome, Validators.required),\n      email: new FormControl(this.authservice.inputemail, [Validators.required, Validators.email]),\n      pass: new FormControl(this.authservice.inputpass, Validators.required),\n  })\n  this.form.valueChanges.subscribe(() => {\n      this.authservice.inputnome= this.form.value.firstname;\n      this.authservice.inputcognome = this.form.value.lastname;\n      this.authservice.inputemail = this.form.value.email;\n      this.authservice.inputpass = this.form.value.pass;\n    });\n}\n}\n","<h4 *ngIf=\"authservice.usersError\" > Questa email è stata gia usata</h4>\n<div class=\"container\">\n<div class=\"pagetitle\">\n  <h1 style=\"font-family: yu-gi-ho;\">Pagina di registrazione</h1>\n</div>\n<form id=\"registerform\" [formGroup]=\"form\" novalidate>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputEmail4\">Email</label>\n      <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\">\n      <app-field-error [field]=\"form.controls.email\" fieldName=\"email\"></app-field-error>\n    </div>\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputPassword4\">Password</label>\n      <input formControlName=\"pass\" type=\"password\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\">\n      <app-field-error [field]=\"form.controls.pass\" fieldName=\"pass\"></app-field-error>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"inputAddress\">FirstName</label>\n    <input formControlName=\"firstname\" type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"firstname\">\n    <app-field-error [field]=\"form.controls.firstname\" fieldName=\"firstname\"></app-field-error>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"inputAddress2\">Lastname</label>\n    <input formControlName=\"lastname\" type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"lastname\">\n    <app-field-error [field]=\"form.controls.lastname\" fieldName=\"lastname\"></app-field-error>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\">\n      <label class=\"form-check-label\" for=\"gridCheck\">\n        Check me out\n      </label>\n    </div>\n  </div>\n  <button *ngIf=\"form.valid\" type=\"submit\" class=\"btn btn-primary\" (click)=\"authservice.registeruser()\">Sign in</button>\n  <div *ngIf=\"authservice.usersData\" class=\"alert alert-success m4\" role=\"alert\">\n    Utente registrato con successo <br>\n  </div>\n</form>\n\n  <div id=\"pagedescription\" class=\"col-sm\">\n    <b >Registratevi per sfruttare le funzionalità dell' applicazione e potrete:</b>\n    <li>\n      gestire il vostro deck aggiungendo e rimuovendo le carte.\n    </li>\n    <li>\n      pubblicare e rimuovere la vostre ricette\n    </li>\n    <li>\n      commentare e recensire le ricette degli altrui\n    </li>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rulespage',\n  templateUrl: './rulespage.component.html',\n  styleUrls: ['./rulespage.component.css']\n})\nexport class RulespageComponent implements OnInit {\n  pdfSrc: string = '/assets/Rulebook_v9_it.pdf';\n  pagenumber: number = 1;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  Incrementpage(e: number){\n    if(this.pagenumber >= 1){\n      this.pagenumber++;\n    }\n  }\n\n  Decrementpage(e: number){\n    if(this.pagenumber == 1){\n      this.pagenumber = 1;\n    }else{\n      this.pagenumber--;\n    }\n  }\n}\n","<!-- <div>\n  <label>PDF src</label>\n  <input type=\"text\" placeholder=\"PDF src\" [(ngModel)]=\"pdfSrc\">\n</div>\n<pdf-viewer [src]=\"pdfSrc\" [render-text]=\"true\" style=\"display: block;\">\n</pdf-viewer> -->\n<div class=\"sfondo\">\n<div class=\"container\">\n  <div class=\"pagetitle\">\n    <h1 style=\"font-family: yu-gi-ho;\">Libro delle regole ufficiali</h1>\n  </div>\n    <div id=\"options\" class=\"row justify-content-center\">\n      <div id=\"indietro\" class=\"col-md-1\">\n        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"Decrementpage(pagenumber)\"> indietro </button>\n      </div>\n      <div id=\"avanti\" class=\"col-md-1\">\n        <button  class=\"btn btn-primary\" type=\"submit\" (click)=\"Incrementpage(pagenumber)\"> avanti</button>\n      </div>\n      <div id=\"pag\" class=\"col-md-2\">\n        <font color=\"white\">Pagina:</font><input value=\"Vai alla pagina\" class=\"form-control\" [(ngModel)]=\"pagenumber\" type=\"Text\">\n      </div>\n    </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <pdf-viewer [src]=\"pdfSrc\"\n        [render-text]=\"true\"\n        [page]=\"pagenumber\"\n        [original-size]=\"false\"\n        [zoom]=\"0.5\"\n        [show-all]=\"false\"\n        style=\"display: block;\">\n      </pdf-viewer>\n    </div>\n  </div>\n</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: \"https://yu-gi-ho-deploy-production.up.railway.app\"\n  //url: \"http://0.0.0.0:3000\"\n  //url: \"http://localhost:8000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}